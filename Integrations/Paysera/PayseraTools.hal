//<halrule>server-only</halrule>
external function string 255 GetLinkToLoanApp();
external inner procedure ShowRedirectHtml(string,boolean);
external inner function string 255 FormatLink(string,string,boolean,boolean);
external inner function string 255 UrlEncodeCS(string);
external inner procedure ShowRedirectHtmlFromArea(area,boolean);
external updating procedure ProcessLoanAppVerificationPaysera(string);
external procedure LoadLoanSession(var vector string);
external inner function string 255 StrReplace(string,string,string);
external function Boolean FindSuretyApplicationDoc(record B2BLoanApplicationVc,record CUVc,record AgreementDocVc);
external function Boolean MarkCustomerAgreementDocSigned(record AgreementDocVc,string);
external function Boolean FindWebLoanAppContact(string,string,string,var record CUVc);
external updating procedure FinishDocumentSigning(string,Longint,string,area);
external function Boolean GetLoanAppContact(string,string,var record CUVc);
external function Boolean ContactShouldSeeDocument2(record B2BLoanApplicationVc,string,record AgreementDocVc);
external function Boolean ContactShouldSeeDocument(record CredManVc,string,record AgreementDocVc);
external function Integer SetCompanyBasedOnCountry();
external procedure ResetCompanyBasedOnCountry(Integer);

updating function string 255 StartPaymentSession(string custcode,string currency,val amount,Longint recid,string rectype)
begin
  record WebNGPaySessionVc WPSr;
  string 255 res;

  WPSr.UUID        = MakeUUID;
  WPSr.AppID       = 1;
  WPSr.PayMethod   = "paysera";
  WPSr.CustCode    = custcode;
  WPSr.Currency    = currency;
  WPSr.InclAmount  = amount;
  WPSr.RecordNr    = recid;
  WPSr.PayMentDesc = rectype;

  if (RecordStore(WPSr,true)) then begin
    res = WPSr.UUID;
  end;
    

  StartPaymentSession = res;
  return;
end;

procedure GetCustomerPaymentDetails(record B2BLoanApplicationVc LAr,var string custcode,var string firstname,var string lastname,var string email,var string addr1,var string addr2,var string addr3,var string postcode,var string country,var val amount)
begin
  Longint pos;
  
  GetNextSubString(LAr.ContactName,pos," ",firstname);
  GetNextSubString(LAr.ContactName,pos," ",lastname);
  email = LAr.eMail;
  addr1 = LAr.Addr0;
  addr2 = LAr.Addr1;
  addr3 = LAr.Addr2;
  postcode = "";//?
  country = "LT";
  amount = 0.01;
  custcode = LAr.CustCode;

  return;
end;

global
updating procedure RedirectPayseraPayment()
begin
  string 255 base,link,link2,link3,tourl,returnurl,md5base64str,script,crncy;
  string 255 amountstr,tstr,projectid,accesscode,paysessionid,teststr;
  record PayseraBlock Pb;
  string 255 custcode,firstname,lastname,email,addr1,addr2,addr3,postcode,country,orderid;
  val amount;
  area areq,areq1,areq2,areq3;
  record CYBlock CYb;
  record B2BLoanApplicationVc LAr;
  Longint fsz,lines,l;
  vector string 255 vSess;
  string 255 rectype,contactname,contactemail;
  Longint recid;
  record AgreementDocVc ADr;
  row AgreementDocVc ADrw;
  record CUVc CUr;
  Boolean cufoundf,showf;
  record CredManVc CredManr;

  switch (WebGetArg("rectype")) begin
    case "agreementdoc":
      ADr.SerNr = StringToLongint(WebGetArg("id"));
      if (ReadFirstMain(ADr,1,true)) then begin
        switch (ADr.Type) begin
          case 7:
            LAr.SerNr = ADr.RecordNr;
            if (ReadFirstMain(LAr,1,true)) then begin
              if (ContactShouldSeeDocument2(LAr,CurrentCust,ADr)) then begin
                showf = true;
              end;
            end;

          otherwise
            CredManr.SerNr = ADr.RecordNr;
            if (ReadFirstMain(CredManr,1,true)) then begin
              if (ContactShouldSeeDocument(CredManr,CurrentCust,ADr)) then begin
                showf = true;
              end;
            end;
        end;
        if (showf) then begin
          CUr.Code = CUrrentCust;
          if (ReadFirstMain(CUr,1,true)) then begin
            rectype = "AgreementDocVc";
            recid = ADr.SerNr;
            contactname = CUr.Name;
            contactemail = CUr.eMail;
          end;
        end;
      end;
    otherwise
      LoadLoanSession(vSess);
      LAr.SerNr = StringToLongint(vSess["WebLoanNr"]);
      if (ReadFirstMain(LAr,1,true)) then begin
        if (GetLoanAppContact(LAr.ContactName,LAr.CustCode,CUr)) then begin
          cufoundf = true;
        end;
        if (!cufoundf) then begin
          RecordClear(CUr);
          ResetLoop(CUr);
          CUr.eMail = LAr.ContacteMail;
          if (ReadFirstKey("eMail",CUr,1,true)) then begin
            if (CUr.Name==LAr.ContactName) then begin
              cufoundf = true;
            end;
          end;
        end;
        if (cufoundf) then begin
          if (FindSuretyApplicationDoc(LAr,CUr,ADr)) then begin
            rectype = "AgreementDocVc2";
            recid = ADr.SerNr;
            contactname = LAr.ContactName;
            contactemail = LAr.ContacteMail;
          end;
        end;
      end;
  end;

  if (nonblank(rectype)) then begin// and FindWebLoanAppContact(LAr.CustCode,contactname,contactemail,CUr)
    BlockLoad(Pb);
    BlockLoad(CYb);
    crncy = "EUR";

    GetCustomerPaymentDetails(LAr,custcode,firstname,lastname,email,addr1,addr2,addr3,postcode,country,amount);
    email = CUr.eMail;
    country = CUr.CountryCode;
    if (blank(country)) then begin
      country = CYb.CountryCode;
    end;
    paysessionid = StartPaymentSession(CUr.Code,crncy,amount,recid,rectype);

    accesscode = Pb.SignPassword;
    projectid = Pb.ProjectID;
    if (Pb.Mode==0) then begin
      teststr = "&test=1";
    end;
    if (WebSecureMode) then begin
      returnurl = "https://" & Webhost;
    end else begin
      returnurl = "http://" & Webhost;
    end;
    base = "/paskolos-paraiska/3";
    link = "/WebPayseraProceed.hal?session=" & paysessionid;//FormatLink("/WebUpdatingAction.hal","action=paysera.proceed&session=" & paysessionid,true,true);
    link2 = "/WebPayseraCancel.hal?session=" & paysessionid;//FormatLink("/WebUpdatingAction.hal","action=paysera.cancel&session=" & paysessionid,true,true);
    link3 = "/WebPayseraCallback.hal?session=" & paysessionid;//FormatLink("/WebUpdatingAction.hal","action=paysera.callback&session=" & paysessionid,true,true);
    tourl = "https://www.paysera.com/pay";
    amountstr = ValToString(amount,M4Val,"","",0);;
    tstr = CYb.BusinessName;
    orderid = StrReplace(left(paysessionid,40),"-","");
    
    md5base64str = Base64Encode("projectid=" & UrlEncodeCS(projectid) &
                "&orderid=" & UrlEncodeCS(orderid)  &
                "&amount=" & UrlEncodeCS(amountstr) &
                "&currency=" & UrlEncodeCS(crncy) &
                "&paytext=" & UrlEncodeCS(tstr) &
                "&accepturl=" & UrlEncodeCS(returnurl) & UrlEncodeCS(link) &
                "&callbackurl=" & UrlEncodeCS(returnurl) & UrlEncodeCS(link3) &
                "&version=1.6" &
                "&control=" & paysessionid &
                "&cancelurl=" & UrlEncodeCS(link2) &
                "&p_firstname=" & UrlEncodeCS(firstname) &
                "&p_lastname=" & UrlEncodeCS(lastname) &
                "&p_email=" & UrlEncodeCS(email) &
                "&p_street=" & UrlEncodeCS(addr1) &
                "&p_city=" & UrlEncodeCS(addr2) &
                "&p_state=" & UrlEncodeCS(addr3) &
                "&p_zip=" & UrlEncodeCS(postcode) &
                "&p_countrycode=" & country);
  //  logtext(0,md5base64str);
    md5base64str = md5string(md5base64str & accesscode);
  //  logtext(0,md5base64str);
    AddTextToArea(tourl,areq);
    AddTextToArea("projectid=" & UrlEncodeCS(projectid),areq1);
    AddTextToArea("&orderid=" & UrlEncodeCS(orderid),areq1);
    AddTextToArea("&amount=" & UrlEncodeCS(amountstr),areq1);
    AddTextToArea("&currency=" & UrlEncodeCS(crncy),areq1);
    if (nonblank(tstr)) then begin
      AddTextToArea("&paytext=" & UrlEncodeCS(tstr),areq1);
    end;
    AddTextToArea(teststr,areq1);

    AddTextToArea("&accepturl=",areq1);
    AddTextToArea(UrlEncodeCS(returnurl),areq1);
    AddTextToArea(UrlEncodeCS(link),areq1);
    
    AddTextToArea("&callbackurl=",areq1);
    AddTextToArea(UrlEncodeCS(returnurl),areq1);
    AddTextToArea(UrlEncodeCS(link3),areq1);
    //AddTextToArea("&sign_password=" & accesscode,areq1); //"5efce23c2356204e000a8a6ffc7d9bc9"

    AddTextToArea("&version=1.6",areq1);
    AddTextToArea("&control=" & paysessionid,areq1);

    AddTextToArea("&cancelurl=",areq1);
    AddTextToArea(UrlEncodeCS(link2),areq1);
    
    if (nonblank(firstname)) then begin
      AddTextToArea("&p_firstname=" & UrlEncodeCS(firstname),areq1);
    end;
    
    if (nonblank(lastname)) then begin
      AddTextToArea("&p_lastname=" & UrlEncodeCS(lastname),areq1);
    end;
    
    if (nonblank(email)) then begin
      AddTextToArea("&p_email=" & UrlEncodeCS(email),areq1);
    end;
    
    if (nonblank(addr1)) then begin
      AddTextToArea("&p_street=" & UrlEncodeCS(addr1),areq1);
    end;
    
    if (nonblank(addr2)) then begin
      AddTextToArea("&p_city=" & UrlEncodeCS(addr2),areq1);
    end;
    
    if (nonblank(addr3)) then begin
      AddTextToArea("&p_state=" & UrlEncodeCS(addr3),areq1);
    end;
    
    if (nonblank(postcode)) then begin
      AddTextToArea("&p_zip=" & UrlEncodeCS(postcode),areq1);
    end;
    if (nonblank(country)) then begin
      AddTextToArea("&p_countrycode=" & UrlEncodeCS(country),areq1);
    end;
    
    WriteAreaToFile(areq1,"PayseraData.txt",0);
    Delete_File("PayseraData_base64.txt");
    script = "bash -c '( ";
    script = script & "base64 ";
    script = script & "PayseraData.txt >> PayseraData_base64.txt";
    script = script & " )' ";
    RunShellScript(script);    

    LoadFileToArea("PayseraData_base64.txt",0,fsz,areq2);
    
    AddTextToArea("/?data=",areq);
    lines = CountLinesInArea(areq2);  
    for (l=0;l<lines;l=l+1) begin
      tstr = GetLineFromArea(areq2,l);
      AddTextToArea(tstr,areq);
      AddTextToArea(tstr,areq3);
    end;
  
    AddTextToArea(accesscode,areq3);
    
    md5base64str = md5area(areq3);
    AddTextToArea("&sign=" & LowerCase(md5base64str),areq);
    writeareatofile(areq,"paysera_request.txt",0);
    ShowRedirectHtmlFromArea(areq,true);
  end else begin
    //redirect back
    base = GetLinkToLoanApp;
    ShowRedirectHTML(base & "3",WebSecureMode);
  end;
  return;
end;

updating procedure FinalizePayseraPayment()
begin
  record WebNGPaySessionVc WPSr,oldWPSr;
  string 255 md5base64str,base,str;
  record PayseraBlock Pb;
  record NotePadVc Noter;
  record RLinkVc RLr;
  record B2BLoanApplicationVc LAr;
  record CUVc CUr;
  record AgreementDocVc ADr,oldADr;
  Boolean foundf;
  area a;
  Integer oldcomp;
  
  WPSr.UUID = WebGetArg("session");

  if (ReadFirstMain(WPSr,1,true)) then begin
    if (WPSr.Status!=10+kCCStatusPaymentOK) then begin
      BlockLoad(Pb);
      
      md5base64str = LowerCase(md5string(WebGetArg("data") & Pb.SignPassword));
Logtext(0,"FinalizePayseraPayment session=" & WPSr.UUID & ";" & WebGetArg("ss1") & ":" & md5base64str);
      if (md5base64str==WebGetArg("ss1")) then begin
        /*
        if (WebGetArg("personcodestatus")=="1") then begin
          str = "ID OK";
        end else begin
          str = "ID not OK";
        end;
        */
        RecordCopy(oldWPSr,WPSr);
        WPSr.Status = 10+kCCStatusPaymentOK;
        if (RecordUpdate(oldWPSr,WPSr,false)==0) then begin   
          FinishDocumentSigning(WPSr.PayMentDesc,WPSr.RecordNr,WPSr.CustCode,a);//empty area so we skip archiving existing documents
          if (WPSr.PayMentDesc=="AgreementDocVc2" or WPSr.PayMentDesc=="AgreementDocVc") then begin
            ADr.SerNr = WPSr.RecordNr;
            if (ReadFirstMain(ADr,1,true)) then begin
              RecordNew(Noter);
              Noter.SerNr = NextSerNr("NotepadVc",CurrentDate,-1,false,"");
              SetTextField(Noter,CurrentDate & " " & CurrentTime);
              if (RecordStore(Noter,false)) then begin
                CreateRecordLink(ADr,CurrentCompany,Noter,CurrentCompany);  
                if (ReadRecordLink(ADr,1,Noter,RLr)) then begin
                  RLr.Comment = USetStr(200106) & " " & str;
                  if (RecordStore(RLr,true)) then begin
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;

  return;
end;

//add these action in webngoverride.hal
global
updating procedure PayseraActions(string action)
begin
  record WebNGPaySessionVc WPSr,oldWPSr;
  string 255 md5base64str,base,str;
  Boolean nextf;
  record PayseraBlock Pb;
  record NotePadVc Noter;
  record RLinkVc RLr;
  record B2BLoanApplicationVc LAr;
  area tmp;
  record NotePadVc Note2r;
  Integer oldcomp;
  
  oldcomp = SetCompanyBasedOnCountry;

  switch (action) begin
    case "getinfo":
      //get the document (allow to download) and show details
      BlockLoad(Pb);
      WebOutString("<res mode='" & Pb.Mode & "'></res>");
    case "proceed":
      //redirect the customer to step 3 or step 4 based on the status
      FinalizePayseraPayment;
      ProcessLoanAppVerificationPaysera(WebGetArg("session"));
    case "cancel":
      //redirect back to step 3
      base = GetLinkToLoanApp;
      ShowRedirectHTML(base & "3",WebSecureMode);
    case "callback":
      //store the payment session status
      FinalizePayseraPayment;
      WebOutString("OK");
    case "startpayment":
      RedirectPayseraPayment;
  end;
  ResetCompanyBasedOnCountry(oldcomp);
  return;
end;


global webpublic
updating procedure WebPayseraProceed()
begin
  FinalizePayseraPayment;
  ProcessLoanAppVerificationPaysera(WebGetArg("session"));

  return;
end;

global webpublic
updating procedure WebPayseraCancel()
begin
  string 255 base; 

  base = GetLinkToLoanApp;
  ShowRedirectHTML(base & "3",WebSecureMode);
  
  return;
end;

global webpublic
updating procedure WebPayseraCallback()
begin

  FinalizePayseraPayment;
  WebOutString("OK");
  
  return;
end;


