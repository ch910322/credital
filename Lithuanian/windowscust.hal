external function string 60 UserDefined(string,string);
external function Boolean HasCustomerSearchKey();
external function Boolean HasCategories();
external function Boolean HasDepartments();
external function Boolean HasStandardCommunicator();
external function Boolean CUVATNrColumn;
external function Boolean HasLimitedAccess();
external function Boolean HasCustomerStatusReport();

event DefineWindows
begin
  real v,vs,h,h2,h3,t,tilenr,vm,pos;
  vs = 20;
 
  SetLangMode(LangLithuanian,"LIT",0);

  WindowBegin("Paskol÷ verslui paraiäkos",B2BLoanApplicationLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(B2BLoanApplicationDClass);
  UseView(B2BLoanApplicationVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. nr.",SerNr,false,SerNr);
  RlColKey(101,101,"Data",TransDate,false,TransDate);
  RlColKey(181,181,"Pradìios data",StartDate,false,StartDate);
  RlColKey(260,260,"Pirk˜jas",CustName,false,CustName);
  RlColKey(-240,-240,"Klas˜",OrderClass,false,OrderClass);
  RlCol   (-200,-200,"Tipas",Type,false);
  RlCol   (-120,-120,"Palðkanos %",InterestRate,true);
  RlCol   (-70,-70,"Suma viso",Sum,true);
  SpecialMenu("Pirk˜jo bðkl˜",'e',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Vertinimo ataskaita",' ',2,"DoEvalReportLsm");
  SearchField("Search");
  EndWindow;

  WindowBegin("Verslo paskol÷ vertinimas",B2BLoanApplicationSClass,CGsList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(B2BLoanApplicationDClass);
  UseView(B2BLoanApplicationVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. nr.",SerNr,false,SerNr);
  RlColKey(101,101,"Data",TransDate,false,TransDate);
  RlColKey(181,181,"Pradìios data",StartDate,false,StartDate);
  RlColKey(260,260,"Pirk˜jas",CustName,false,CustName);
  RlColKey(-240,-240,"Klas˜",OrderClass,false,OrderClass);
  RlCol   (-200,-200,"Tipas",Type,false);
  RlCol   (-120,-120,"Palðkanos %",InterestRate,true);
  RlCol   (-70,-70,"Suma viso",Sum,true);
  SpecialMenu("Pirk˜jo bðkl˜",'e',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Vartinimo ataskaita",' ',2,"");
  EndWindow;

  WindowBegin("Numeri÷ serija - Paskol÷ verslui paraiäkos",B2BLoanAppSerTClass,CGHbl,HBlRecType);
  SetBlid(B2BLoanAppSerBlock);
  SetWRect(20,80,600,351);
  Sizeable(-1,-1,0,0);
  MatrixBegin(h,v,-31,-20,-,199);
  MatCol(1,24,"Nuo nr.",0,TSerStart,false,0);
  MatCol(1,104,"Iki nr.",0,TSerEnd,false,0);
  MatCol(1,184,"Nuo datos",0,StartDate,false,PasteCurDate);
  MatCol(1,264,"Iki datos",0,EndDate,false,PasteCurDate);
  MatCol(1,344,"Komentaras",0,TSerCom,false,0);
  EndMatrix;
  EndWindow;
  
  WindowBegin("Paraiäk÷ nustatymai",CMApplicationSetTClass,CGSbl,SRType);
  SetBlid(CMApplicationSetBlock);
  SetWRect(20,80,570,298);
  Sizeable(-1,-1,0,0);
  EditField(h=150,v=6,100,"Sˆvininko pareigos",Normal,OwnerTitle,false,JobTitleSClass);
  EditField(h,v+=vs,100,"Vadovo pareigos",Normal,CEOTitle,false,JobTitleSClass);
  EditField(h,v+=vs,100,"Numatyta [araiäkos klas˜",Normal,DefOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Nutraukimo klas˜",Normal,TerminatedOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Refinance Class",Normal,RefinClass,false,OrderClassSClass);

  ButtonFrame(h,v+=40,150,2,"Numatytas laiduotojas");
  RadioButton(h,v,0,0,"Kontaktas",ContactPasteSpecial);
  RadioButton(h,v+=16,1,0,"Kontaktinis asmuo",ContactPasteSpecial);  

  EditField(h,v+=40,100,"Dienos metuose",Normal,DaysInYear,false,0);
  ButtonFrame(h,v+=40,150,2,"Dienos m˜nesyje");
  RadioButton(h,v,0,0,"30",DaysInMonth);
  RadioButton(h,v+=16,1,0,"Faktinis",DaysInMonth); 
  
  CheckBox(h,v+=30,0,"Faktðros detal˜s",DetailedInvoice);
  EditField(h,v+=vs,100,"Papildomi komentarai",Normal,InvoiceCommentStr,false,0);

  EndWindow;

  WindowBegin("Balas",ScoringSupLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  //Sizeable(-1,-1,0,0);
  SpawnClass(ScoringSupDClass);
  UseView(ScoringSupVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  SearchField("Search");
  EndWindow;

  WindowBegin("Balas",ScoringSupDClass,CGView,-);
  SetWRect(20,80,730,539);
  UseView(ScoringSupVc);
  AutoSizeWindow(false);  
  vs = 20; h=135; h2=375; h3=575;
  EditField(h,v=6,100,"Rizikos klas˜",Normal,RiskClass,false,0);
  EditField(h2,v,100,"Skolos",Normal,Debts,false,0);
  CheckBox(h3,v,0,"Kredito istorija",CreditHistory);
  EditField(h,v+=vs,100,"M˜nesiai be skol÷",Normal,DebtFreeMonths,false,0);
  EditField(h2,v,100,"6 m˜n. atlyginas",Normal,Salary6Months,false,0);
  EditField(h3,v,100,"¯darbinimo data",Normal,DateEmployed,false,PasteCurDate);
  EditField(h,v+=vs,100,"¯mon˜",Normal,Company,false,0);
  EditField(h2,v,100,"Position",Normal,Position,false,0);
 
  EditField(h,v+=vs,100,"V˜luojantys kreditai",Normal,LateCredits,false,0);
  EditField(h2,v,100,"V˜lavimo dienos",Normal,LateDays,false,0);
  
  EditField(h2,v+=vs,100,"Bendras m˜n. °sipareigojim÷ mok.",Normal,MonthlyOblPayment,false,0);
  EditField(h2,v+=vs,100,"Bendros m˜n. °plaukos iä kit÷ °m.",Normal,TotIncomeFromCompanies,false,0);

  vm = v+40;
  ButtonFrame(h,v=vm,190,4,"Turtas");
  RadioButton(h,v,0,0,"Nr.",AssetsType);
  RadioButton(h,v+=16,1,0,"Uìstatas",AssetsType);  
  RadioButton(h,v+=16,2,0,"Priklauso <20000",AssetsType);  
  RadioButton(h,v+=16,3,0,"Priklauso of 20000+ arba 3+ objektai",AssetsType);
    
  ButtonFrame(h2,v=vm,150,2,"Lytis");
  RadioButton(h2,v,0,0,"Vyras",SexType);
  RadioButton(h2,v+=16,1,0,"Moteris",SexType);  
  
  ButtonFrame(h3,v=vm,150,2,"Gyv. vieta");
  RadioButton(h3,v,0,0,"Gyventojas",ResidencyType);
  RadioButton(h3,v+=16,1,0,"Negyventojas",ResidencyType);  

  MatrixBegin(10,v+=vs+60,-40,-1,-,50);
  Flip(0);
  MatCol(1,20,"Laikotarpis",0,Period,false,0);
  Flip(1);
  MatCol(1,80,"Pram. äaka",0,Industry,false,0);
  MatCol(1,-300,"Patikrinti m˜n.",0,MonthChecks,false,0);
  MatCol(1,-200,"Patikrinti ketvirt°",0,QuarterChecks,false,0);
  MatCol(1,-100,"Patikrinti pus« met÷",0,HalfYearChecks,false,0);
  Flip(2);
  MatCol(1,80,"Atlyginimas",0,Salary,false,0);
  MatCol(1,180,"Pap. atlyginimas",0,ExtraSalary,false,0);
  Flip(3);
  MatCol(1,80,"Turtas",0,Asset,false,0);
  MatCol(1,200,"Turto tipas",0,AssetType,false,0);
  MatCol(1,270,"Vietov˜",0,Location,false,0);
  MatCol(1,400,"Juridinis stovis",0,LegalStatus,false,0);
  MatCol(1,-50,"Vert˜",0,AssetValue,false,0);
  Flip(4);
  MatCol(1,80,"¯sipareigojimai",0,Obligations,false,0);
  MatCol(1,150,"Vert˜",0,ObligationsValue,false,0);
  MatCol(1,220,"Paskolos",0,Loans,false,0);
  MatCol(1,290,"Kreditin˜s kortel˜s",0,CreditCards,false,0);
  MatCol(1,360,"Kredito limitai",0,CreditLimits,false,0);
  MatCol(1,430,"Lizingas",0,Leasing,false,0);
  EndMatrix;

  VTab(-50,v=15,-16,v+=vs,ToolFlip,1,"A");
  VTab(-50,v,-6,v+=vs,ToolFlip,2,"B");
  VTab(-50,v,-6,v+=vs,ToolFlip,3,"C");
  VTab(-50,v,-16,v+=vs,ToolFlip,4,"D");

  EndWindow;
 
  WindowBegin("Pirk˜jas",B2BLoanApp_CUSClass,CGslist,-);
  SetWRect(20,80,700,298);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  SpawnClass(CUDClass);
  
  HalPushButton(-300,v=7,-200,v+=20,"CustSwitchToContacts","Kontaktinis asmuo");
 
  RecordList(4,20,-21,-39);
  RlColKey(4,4,"Nr.",Code,false,Code);
  pos = 96;
  if (HasCustomerSearchKey) then begin
    RlColKey(pos,pos,"Trumpas",SearchKey,false,SearchKey);
    pos = pos + 50;
  end;
  
  if (HasCategories) then begin
    RlColKey(pos,pos,"C_at",CustCat,false,ActGroup);
    pos = pos + 50;
  end;
  if (IsStandardProduct) then begin
    if (HasLocalization("FIN,POL")) then begin
      RlColKey(pos,pos,"#VAT Reg. No.#",VATNr,false,VATNr);
      pos = pos + 120;
    end;
  end;
  RlColKey(pos,pos,"Vardas",Name,false,Name);  
  if (HasDepartments) then begin
    RlColKey(-230,-230,"Skyrius",Department,false,Department);
  end;
  if (HasStandardCommunicator) then begin
    if (CUVATNrColumn) then begin
      RlColKey(-110,-110,"#VAT Reg. No.#",VATNr,false,VATNr);
    end else begin
      RlColKey(-110,-110,"#Reg. No.#",RegNr1,false,RegNr1);
    end;
  end;
  if (HasLimitedAccess) then begin
    BrowseSubsetButton(-40,-15);
  end;
  SearchField("Ieäkoti");
  if (GuiType!=kGuiiPhone and GuiType!=kGuiAndroid) then begin
    if (HasCustomerStatusReport) then begin
      SpecialMenu("Pirk˜jo bðkl˜",'e',0,"CUStatusCUSsm");
    end;
  end;
  SpecialMenu("Ieäkoti",'F',1,"CUSearchLsm");
  EndWindow;

  WindowBegin("Uìsakymo klas˜s spalvos",OrderClassColorTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(OrderClassColorBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Uìsakymo klas˜",0,OrderClass,false,OrderClassSClass);
  MatCol(1,100,"Spalva",0,Color,false,SetSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("Vertinimo konstantos",EvalConstTClass,CGSbl,-);
  SetBlid(EvalConstBlock);
  h = 200;
  SetWRect(20,80,850,298);
  Sizeable(-1,-1,0,0);
  tilenr = 1;
  Tile(0,20,false,"",CompAgeStep);
  TileButton(tilenr,"Suma"); tilenr = tilenr + 1;
  TileButton(tilenr,"Kredituojamas"); tilenr = tilenr + 1;  
  Tile(1,95,false,"1",CompAgeStep);
  EditField(h=250,v=6,100,"¯mon˜s amìius (metais)",Normal,CompAgeStep,true,0);
  CheckBox(h+150,v,0,"Debug",Debug);
  EditField(h,v+=vs,100,"Metinis pelnas ëEM",Normal,AnnualProfitLow,true,0);
  EditField(h,v+=vs,100,"Metinis pelnas AUKá",Normal,AnnualProfitHigh,true,0);
  EditField(h,v+=vs,100,"Minimalus atlyg.",Normal,MininumSalary,true,0);
  EditField(h,v+=vs,100,"Didesn˜s uì min. atlyg. koef.",Normal,SalAboveMinCoef,true,0);
  EditField(h,v+=vs,100,"300",Normal,c300,true,0);
  EditField(h,v+=vs,100,"600",Normal,c600,true,0);
  EditField(h,v+=vs,100,"Priklauso of 20000+ or 3+ objektai koef.",Normal,Ownership1Coef,true,0);
  EditField(h,v+=vs,100,"Priklauso <20000  koef.",Normal,Ownership2Coef,true,0);
  EditField(h,v+=vs,100,"Uìstato koef.",Normal,MortgageCoef,true,0);
  EditField(h,v+=vs,100,"Ne turto koef.",Normal,NoAssetCoef,true,0);
  EditField(h,v+=vs,100,"Pajamos 1 ìingsnis",Normal,IncomeStep1,true,0);
  EditField(h,v+=vs,100,"Pajamos 2 ìingsnis",Normal,IncomeStep2,true,0);
  EditField(h,v+=vs,100,"Laisvai samdomas iki 500",Normal,Enterpreneur500,true,0);
  EditField(h,v+=vs,100,"Laisvai samdomas iki 900",Normal,Enterpreneur900,true,0);
  EditField(h,v+=vs,100,"Laisvai samdomas iki 900+",Normal,Enterpreneur9002,true,0);
  EditField(h,v+=vs,100,"Specialistas iki 500",Normal,Specialist500,true,0);
  EditField(h,v+=vs,100,"Specialistas iki 900",Normal,Specialist900,true,0);
  EditField(h,v+=vs,100,"Specialistas iki 900+",Normal,Specialist9002,true,0);
  Tile(2,95,false,"2",OurCustScore);
 
  EditField(h,v=6,100,"Balas jei mðs÷ klientas",Normal,OurCustScore,true,0);
  EditField(h,v+=vs,100,"Balas jei UAB",Normal,UABScore,true,0);
  EditField(h,v+=vs,100,"Balas jei MB",Normal,MBScore,true,0);
  EditField(h,v+=vs,100,"Balas jei I¯",Normal,IIScore,true,0);
  EditField(h,v+=vs,100,"Balas jei Vä¯",Normal,VSIBScore,true,0);
  EditField(h,v+=vs,100,"Balas jei kita",Normal,OtherCompScore,true,0);
  EditField(h,v+=vs,100,"Balas kai jaunesn˜ nei 1Êm˜n.",Normal,AgeScore1M,true,0);
  EditField(h,v+=vs,100,"Balas kai jaunesn˜ nei 9Êm˜n.",Normal,AgeScore9M,true,0);
  EditField(h,v+=vs,100,"Balas kai jaunesn˜ nei 2Êmetai",Normal,AgeScore2Y,true,0);
  EditField(h,v+=vs,100,"Balas kai vyresn˜ nei 2Êmetai",Normal,AgeScore2Y2,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 1",Normal,BankruptcyScore1,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 2",Normal,BankruptcyScore2,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 3",Normal,BankruptcyScore3,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 4",Normal,BankruptcyScore4,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 5",Normal,BankruptcyScore5,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 6",Normal,BankruptcyScore6,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 7",Normal,BankruptcyScore7,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 8",Normal,BankruptcyScore8,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 9",Normal,BankruptcyScore9,true,0);
  EditField(h,v+=vs,100,"Balas jei bankroto reitingas 10",Normal,BankruptcyScore10,true,0);
  EditField(h2=600,v=6,100,"¯mon˜s ëEM balas",Normal,CompScoreLow,true,0);
  EditField(h2,v+=vs,100,"¯mon˜s AUKá balas",Normal,CompScoreHigh,true,0);
  EditField(h2,v+=vs,100,"Rizika jei maìiau nei 21",Normal,RiskAge21,true,0);
  EditField(h2,v+=vs,100,"Rizika jei 21-27",Normal,RiskAge2127,true,0);
  EditField(h2,v+=vs,100,"Rizika jei 28-64",Normal,RiskAge2864,true,0);
  EditField(h2,v+=vs,100,"Rizika jei 65+",Normal,RiskAge65,true,0);
  EditField(h2,v+=vs,100,"Laiduotojo ëEM balas",Normal,SuretyScoreLow,true,0);
  EditField(h2,v+=vs,100,"Laiduotojo AUKá balas",Normal,SuretyScoreHigh,true,0);
  EditField(h2,v+=vs,100,"1 laiduotojo balas",Normal,SuretyScore1,true,0);
  EditField(h2,v+=vs,100,"2 laiduotojo balas",Normal,SuretyScore2,true,0);
  EditField(h2,v+=vs,100,"3 laiduotojo balas",Normal,SuretyScore3,true,0);
  EditField(h2,v+=vs,100,"2 Rizika jei maìiau nei 21",Normal,Risk2Age21,true,0);
  EditField(h2,v+=vs,100,"2ÊRizika jei if 21-27",Normal,Risk2Age2127,true,0);
  EditField(h2,v+=vs,100,"2 Rizika jei 28-64",Normal,Risk2Age2864,true,0);
  EditField(h2,v+=vs,100,"2ÊRizika jei 65+",Normal,Risk2Age65,true,0);
  EditField(h2,v+=vs,100,"Min. paskola % pagal gautinas sumas",Normal,MinLoanReceivables,true,0);
  EditField(h2,v+=vs,100,"2-ojo darbo koef.",Normal,SecondJobCoef,true,0);
  EditField(h2,v+=vs,100,"2-ojo darbo koef. 2",Normal,SecondJobCoef2,true,0);
  EditField(h2,v+=vs,100,"¯mon˜s tipas 1",Normal,IICompType,true,0);
  EditField(h2,v+=vs,100,"¯mon˜s tipas 2",Normal,VSICompType,true,0);
 
  EndWindow;

  WindowBegin("Vertinimo rizikos klas˜s",EvalRiskClassTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(EvalRiskClassBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Rizikos klas˜",0,RiskClass,false,0);
  MatCol(1,100,"Balas",0,Score,true,0);
  MatCol(1,180,"¯sp˜jimas",0,Warning,false,SetSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("Prek˜s prioritetas",ItemPriorityTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(ItemPriorityBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Prek˜",0,ArtCode,false,INSClass);
  MatCol(1,150,"Prioritetas",0,Priority,true,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Verslo paskol÷ paraiäk÷ vertinimas",B2BLoanEvalRClass,CGRcW,RcType);
  SetWRect(20,80,400,200);
  h = 150; v=6; vs=20;
  EditFieldTL(h,v=6,-40,"Verslo paskolos paraiäkos nr.",M4Long,Normal,20,long1,false,B2BLoanApplicationSClass);
  EndWindow;

  WindowBegin("Kredito istorija",CredHistLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(CredHistDClass);
  UseView(CredHistVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. nr.",SerNr,false,SerNr);
  RlColKey(101,101,"Data",TransDate,false,TransDate);
  RlColKey(181,181,"¯raäo nr.",RecordNr,false,RecordNr);
  RlCol   (260,260,"Tipas",RecordType,false);
  EndWindow;

  WindowBegin("Kredito istorija",CredHistDClass,CGview,-);
  SetWRect(20,80,640,380);
  h = 150; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(CredHistVc);
  EditField(h,v,80,"Ser. nr.",ViewOnly,SerNr,false,0);
  EditField(h2,v,120,"Pirk˜jas",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,120,"¯raäo nr.",Normal,RecordNr,false,0);
  EditField(h,v+=vs,120,"Buv«s °raäas.",Normal,PreviousNr,false,0);
  EditField(h,v+=vs,120,"Data",Normal,TransDate,false,0);
  EditField(h,v+=vs,120,"Mokes‹io tipas",Normal,ChargeType,false,0);
  EditField(h,v+=vs,120,"¯raäo tipas",Normal,RecordType,false,0);
  EditField(h,v+=vs,120,"Suma",Normal,Sum,false,0);
  EditField(h,v+=vs,120,"Terminas",Normal,PayDate,false,0);
  EditField(h,v+=vs,120,"Prek˜",Normal,ArtCode,false,0);
  EditField(h,v+=vs,120,"CredManNr",Normal,CredManNr,false,0);
  EditField(h,v+=vs,120,"Start Date",Normal,CredFromDate,false,0);
  EditField(h,v+=vs,120,"End Date",Normal,CredToDate,false,0);
  EditField(h,v+=vs,120,"Invoices Sum",Normal,InvSum,false,0);
  EditField(h,v+=vs,120,"Paid Sum",Normal,PaidSum,false,0);
  EditField(h,v+=vs,120,"Balance",Normal,Balance,false,0);
  EditField(h,v+=vs,120,"Factoring Inv.",Normal,FactoringInvoice,false,0);
  CheckBox(h,v+=vs,0,"Main Record",MainRecord);
  EndWindow;

  WindowBegin("Kredito sutart. fakt. sprecifikacija",GenLoanInvoicesVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Data iki",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,153,"Kredito sutartis",M4Long,Normal,0,long2,false,CredManSClass);
  EditFieldTL(h,v+=vs,153,"Pirk˜jas",M4Code,Normal,20,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,153,"Vadybininkas",M4Code,Normal,10,f2,false,UserSClass);
  EndWindow;

  WindowBegin("Papildomos banko sask.",CUBankAccDClass,CGView,-);
  SetWRect(20,80,400,250);
  AutoSizeWindow(false);  
  UseView(CUBankAccVc);
  MatrixBegin(0,16,-1,-1,-,10);
  MatCol(1,25,"Banko kodas",0,BankCode,false,BankSClass);
  MatCol(1,140,"Banko sˆsk.",0,BankAccount,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Patikrinti iäpirkimo vert«",CheckBuyoutValueWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,200);
  AutoSizeWindow(false);  
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Iäpirkimo data",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Skola viso",M4Val,Normal,0,vals0,false,0);
  EditFieldTL(h,v+=vs,120,"Paskutin˜s fakt. vert˜",M4Val,Normal,0,vals1,false,0);
  EditFieldTL(h,v+=vs,120,"Numatytas mok˜jimas",M4Val,Normal,0,vals2,false,0);
  HalPushButton(h,v+=vs,h+120,v+20,"CalculateBuyOutValue","Calculate");
  EndWindow;

  WindowBegin("Nurodyti kredito sutart. grafikˆ",CredManScheduleRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Kredito sutartis",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;


  WindowBegin("Sustabdyti kredito sutart°",PauseCredManWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,140);
  AutoSizeWindow(false);  
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Sustabdyti m˜nesi÷",M4Long,Normal,0,long1,false,0);
  HalPushButton(h,v+=vs,h+120,v+20,"PauseCredManWClassPause","Sustabdyti");
  EndWindow;

  WindowBegin("Refinance Agreement",RefinCredManWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,240,235);
  AutoSizeWindow(false);  
  h = 20;
  HalPushButton(h,v=36,h+180,v+20,"RefinCredManWClassRefinance","Refinance");
  HalPushButton(h,v+=30,h+180,v+20,"RefinCredManWClassProlong","Prolong");
  HalPushButton(h,v+=30,h+180,v+20,"RefinCredManWClassTransfer","Transfer to Surety Provider");
  EndWindow;

  WindowBegin("Refinance Agreement",RefinCredMan2WClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,440);
  AutoSizeWindow(true);  
  h = 150; h2 = 250; v=350;
  EditFieldTL(h,v=6,120,"Total Dept",M4Val,ViewOnly,0,vals0,false,0);
  EditFieldTL(h,v+=vs,120,"Remaining Balance",M4Val,Normal,0,vals1,false,0);
  EditFieldTL(h,v+=vs,120,"Extra Value",M4Val,Normal,0,vals2,false,0);
  EditFieldTL(h,v+=vs,120,"Refinance value",M4Val,Normal,0,vals3,false,0);
  EditFieldTL(h,v+=vs,120,"Refinance Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"New Agreement Type",M4Code,Normal,20,f1,false,CredManTypeSClass);
  EditFieldTL(h,v+=vs,120,"Months",M4Int,Normal,0,flags[0],false,0);
  EditFieldTL(h,v+=vs,120,"New Customer",M4Code,Normal,20,f2,false,CUSClass);
  EditFieldTL(h,v+=vs,120,"New Payment Day",M4Int,Normal,0,flags[1],false,0);
  EditFieldTL(h,v+=vs,120,"New Monthly Rate %",M4Val,Normal,0,vals4,false,0);
  ButtonFrame(h,v=v+40,200,3,"Refinance Type");
  RadioButton(h,v,0,0,"Refinance",ArtMode);
  RadioButton(h,v+=16,1,0,"Prolong",ArtMode);
  RadioButton(h,v+=16,2,0,"Transfer to Surety Provider",ArtMode);  
  HalPushButton(h,v+=40,h+120,v+20,"RefinCredMan2WClassSubmit","Refinance");
  EndWindow;

  WindowBegin("Item Priority",ItemPriorityTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(ItemPriorityBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,Name,false,0);
  MatCol(1,-50,"Priority",0,Priority,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("SMS Reminders",SMSReminderLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(SMSReminderDClass);
  UseView(SMSReminderVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Type",Type,false);
  RlCol   (201,201,"Name",Comment,false);
  RlColKeyTL(-30,-30,"Act.",M4Mark,ActiveFlag,false,ActiveFlag);
  EndWindow;

  WindowBegin("SMS Reminder",SMSReminderDClass,CGview,-);
  SetWRect(20,80,760,380);
  h = 120; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(SMSReminderVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  CheckBox(h2,v,0,"Active",ActiveFlag);
  EditField(h,v+=vs,250,"Name",Normal,Comment,false,0);
  EditField(h,v+=vs,120,"Type",Normal,Type,false,0);
  EditField(h,v+=vs,120,"Days",Normal,Days,false,0);
  EditField(h,v+=vs,120,"Last Sent",Normal,LastSentDate,false,0);
  CheckBox(h,v+=vs,0,"Mondays",Day1);
  EditField(h2,v,70,"Time",Normal,Time1,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Tuesday",Day2);
  EditField(h2,v,70,"Time",Normal,Time2,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Wednesday",Day3);
  EditField(h2,v,70,"Time",Normal,Time3,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Thursday",Day4);
  EditField(h2,v,70,"Time",Normal,Time4,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Friday",Day5);
  EditField(h2,v,70,"Time",Normal,Time5,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Saturday",Day6);
  EditField(h2,v,70,"Time",Normal,Time6,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Sunday",Day7);
  EditField(h2,v,70,"Time",Normal,Time7,false,PasteCurTime);

  CheckBox(h,v+=vs,0,"Bank Holidays",BankHolidays);

  StaticText(420,v=26,"Text",false);
  TextField(420,v+=10,-20,190,Message,0);

  EndWindow;

  WindowBegin("SMS Reminder queue",SMSReminderQueueLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  UseView(SMSReminderQueueVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Inv. Date",InvDate,false);
  RlCol   (201,201,"Invoice Nr.",InvoiceNr,false);
  RlColKeyTL(-30,-30,"Sent",M4Mark,SentFlag,false,SentFlag);
  EndWindow;

  WindowBegin("Campaigns",WebCampaignLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(WebCampaignDClass);
  UseView(WebCampaignVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Type",Type,false);
  RlCol   (201,201,"Name",Comment,false);
  RlCol   (-160,-160,"Start Date",StartDate,false);
  RlCol   (-80,-80,"End Date",EndDate,false);
  EndWindow;

  WindowBegin("Campaign",WebCampaignDClass,CGview,-);
  SetWRect(20,80,760,380);
  h = 120; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(WebCampaignVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  EditField(h,v+=vs,250,"Name",Normal,Comment,false,0);
  EditField(h,v+=vs,120,"Type",Normal,Type,false,SetSClass);
  EditField(h,v+=vs,120,"Start Date",Normal,StartDate,false,PasteCurDate);
  EditField(h,v+=vs,120,"End Date",Normal,EndDate,false,PasteCurDate);
  EditField(h,v+=vs,120,"Image",Normal,Image,false,WebCampaignImageSClass);

  EndWindow;

  WindowBegin("Paste Image",WebCampaignImageSClass,CGother,HBlRecType);
  SetWRect(240,80,600,348);
  StringList(9,9,-19,-19);
  EndWindow;

  WindowBegin("Partners",WebPartnerTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(WebPartnerBlock);
  MatrixBegin(10,20,-30,-10,-,10);
  MatCol(1,25,"Classification",0,Classification,false,CClassSClass);
  EndMatrix;
  EndWindow;

  return;
end;

window B2BLoanApp_ContactSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;

  WindowBegin("Paste Contact",B2BLoanApp_ContactSClass,CGother,RcType);
  SetWRect(64,80,500,298);
  HalPushButton(-120,v=8,-6,v+=20,"ContactsSwitchToCust","Contacts");
  DataList(9,v+10,-22,-6,"DLPasteContact");
  DataListColumn(1,6,250,AdjLeft,"DLContactName","Name",M4Str);
  DataListColumn(1,256,-32,AdjLeft,"DLContactTitle","Courtesy Title",M4Str);  
  EndWindow;
end;

window B2BLoanApplicationDClass:11
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,h2,h3,t,tilenr,vm,pos;
  string 255 label1,label2,label3,label4,label5;
  record B2BLoanApplicationVc LAr;

  WindowBegin("B2B Loan Application",B2BLoanApplicationDClass,CGview,-);
  SetWRect(64,80,859,300);
  UseView(B2BLoanApplicationVc);
  DynamicWindow;
  vs = 20; h=135; h2=375; h3=595;
  Tile(0,95,false,"",SerNr);
  EditField(h,v=6,100,"Ser. nr.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,80,"Data",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"Pirk˜jas",Normal,CustCode,false,CUSClass);
  EditField(h2,v,-40,"Vardas",Normal,CustName,false,0);
  EditField(h,v+=vs,100,"Kontaktas",Normal,ContactName,false,B2BLoanApp_ContactSClass);
  EditField(h2,v,130,"E-paätas",Normal,eMail,false,0);
  EditField(h3+30,v,-40,"Tel. nr.",Normal,PhoneNo,false,0);
  EditField(h,v+=vs,100,"Kontaktinis e-paätas",Normal,ContacteMail,false,0);
  EditField(h2,v,130,"Kontaktinis tel.",Normal,ContactPhoneNo,false,0);
  EditField(h3+30,v,-40,"Kontaktinis mob.",Normal,ContactMobile,false,0);
  EditField(h,v+=vs,100,"Vadybininkas",Normal,Manager,false,UserSClass);
  EditField(h2,v,-40,"Vardas",Normal,ManagerName,false,0);
  EditField(h,v+=vs,100,"Tipas",Normal,Type,false,CredManTypeSClass);
  vm = v;
  EditField(h,v+=vs,100,"Suma viso",Normal,Sum,true,0);
  EditField(h,v+=vs,100,"M˜nesiai",Normal,Months,true,0);
  EditField(h,v+=vs,100,"Uìsakymo klas˜",Normal,OrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Pradìios data",Normal,StartDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"Pab. data",ViewOnly,EndDate,false,0);
  v = vm;
  EditField(h3=h3+30,v,-40,"M˜n. palðkanos %",Normal,InterestRate,true,0);
  EditField(h3,v+=vs,-40,"M˜n. mok. diena",Normal,MonthlyPaymentDay,true,0);
  EditField(h3,v+=vs,-40,"Maks. rek. suma",ViewOnly,MaxRecSum,true,0);
  EditField(h3,v+=vs,-40,"Vert˜ pagal laiduotojus",Normal,MaxValSurety,true,0);
  EditField(h3,v+=vs,-40,"Vert˜ pagal °mon«",Normal,MaxValCompany,true,0);
  v = vm;
  ButtonFrame(h2,v=v+20,100,5,"Kredituojamas");
  RadioButton(h2,v,0,0,"Neapskai‹iuota",Creditable);
  RadioButton(h2,v+=16,1,0,"Taip A",Creditable);
  RadioButton(h2,v+=16,2,0,"Taip B",Creditable);  
  RadioButton(h2,v+=16,3,0,"4 akys",Creditable);  
  RadioButton(h2,v+=16,4,0,"Ne",Creditable);
  v=v+vs;
  HalPushButton(h3-90,v,h3+10,v+25,"B2BLoanAppCalculate","Calculate");
  HalPushButton(h3+30,v,h3+130,v+25,"B2BLoanAppEvaluate","Evaluate");

  h3=h3-30;
  tilenr = 1;
  TileButton(tilenr,"Kontaktas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Laiduotojai"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Vertinimas"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Faktoringas"); tilenr = tilenr + 1;  
  tilenr = 1;
  Tile(tilenr,290,true,tilenr,Addr0); tilenr = tilenr + 1;
  v = 6;
  label1 = UserDefined("CUVc","InvAddr0");
  EditField(h,v,150,label1,Normal,Addr0,false,0);
  label2 = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,150,label2,Normal,Addr1,false,0);
  label3 = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,150,label3,Normal,Addr2,false,0);
  label4 = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,150,label4,Normal,Addr3,false,0);
  label5 = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,150,label5,Normal,Addr4,false,0);
  vm = v;
  v = 6;
  EditField(h2=400,v,120,"Banko kodas",Normal,BankCode,false,BankSClass);
  EditField(h2,v+=vs,120,"Banko pavadinimas",Normal,BankName,false,0);
  EditField(h2,v+=vs,120,"Banko sˆsk.t",Normal,BankAccount,false,BankAccountSClass);
  CheckBox(h3,v=6,0,"Tiesioginio debeto uìklausa",RequestDirectDebit);
  
  v = vm + v;
  ButtonFrame(h,v=v+40,700,1,"Sˆvininkas");
  EditField(h+100,v,100,"Kontakto kodas",Normal,OwnerCustCode,false,B2BLoanApp_CUSClass);
  EditField(h2+50,v,100,"Sˆvininko vardas",Normal,OwnerName,false,0);
  EditField(h2+280,v,100,"Owner Represent.",Normal,OwnerRep,false,0);
  ButtonFrame(h,v=v+40,700,1,"Vadovas");
  EditField(h+100,v,100,"Kontakto kodas",Normal,CEOCustCode,false,B2BLoanApp_CUSClass);
  EditField(h2+50,v,100,"Vadovo vardas",Normal,CEOName,false,0);
  EditField(h2+280,v,100,"CEO Represent.",Normal,CEORep,false,0);
  
  Tile(tilenr,290,true,tilenr,MajorityOwner1); tilenr = tilenr + 1;  
  
  StaticText(h,v=26,"Laiduotojas 1",false);
  CheckBox(h,v=v+vs,0,"Kontr. pak, savininkas",MajorityOwner1);
  EditField(h,v+=vs,100,"Kontakto kodas 1",Normal,SuretyProvider1,false,B2BLoanApp_CUSClass);
  EditField(h,v+=vs,100,"Prieiga prie duom. iki",ViewOnly,Surety1AccessToDataUntil,false,PasteCurDate);
  vm = v;
  CheckBox(h,v=v+vs,0,"Turto areätas",Surety1AssetArrests);
  CheckBox(h,v=v+vs,0,"Bakrotas",Surety1Bankruptcy);
  CheckBox(h,v=v+vs,0,"Nekredituojamas",Surety1NotCreditable);
  CheckBox(h,v=v+vs,0,"Teismo bylos pernai",Surety1Courts);
  v = vm;
  ButtonFrame(h-100,v+=40,90,2,"Tipas");
  RadioButton(h-100,v,0,0,"Laisvai samdomas",Surety1Type);
  RadioButton(h-100,v+=16,1,0,"Specialistas",Surety1Type);  
  HalPushButton(h,v+=vs+30,h+120,v+25,"ShowB2BAppScoring1","Vertinimo balas");
  HalPushButton(h-90,v,h-10,v+25,"ShowB2BAppRemSur1","Remove"); v = v + 10;
  EditField(h,v+=vs,100,"Vardas",Normal,Surety1Name,false,0);
  EditField(h,v+=vs,100,"Pareigos",Normal,Surety1Position,false,JobTitleSClass);
  EditField(h,v+=vs,100,"Tel. nr.",Normal,Surety1Phone,false,0);
  EditField(h,v+=vs,100,"E-paätas",Normal,Surety1eMail,false,0);
  EditField(h,v+=vs,100,"ID",Normal,Surety1ID,false,0);

  EditField(h,v+=vs,130,label1,Normal,Surety1Addr0,false,0);
  EditField(h,v+=vs,130,label2,Normal,Surety1Addr1,false,0);
  EditField(h,v+=vs,130,label3,Normal,Surety1Addr2,false,0);
  EditField(h,v+=vs,130,label4,Normal,Surety1Addr3,false,0);
  EditField(h,v+=vs,130,label5,Normal,Surety1Addr4,false,0);
  ButtonFrame(h,v=v+40,150,4,"Amìiaus grup˜");
  RadioButton(h,v,0,0,"Maìiau nei 21",Surety1AgeGroup);
  RadioButton(h,v+=16,1,0,"21-27",Surety1AgeGroup);  
  RadioButton(h,v+=16,2,0,"28-64",Surety1AgeGroup);  
  RadioButton(h,v+=16,3,0,"65+",Surety1AgeGroup);
  if (GetWindowClass(CurWindow)=="B2BLoanApplicationDClass") then begin  
    GetWindowRecord(CurWindow,LAr);
  end;
  if (LAr.SuretyCnt>=2) then begin
    StaticText(h2=365,v=26,"Laiduotojas 2",false);
    CheckBox(h2,v=v+vs,0,"Kontr. pak. sˆvininkas",MajorityOwner2);
    EditField(h2,v+=vs,100,"Kontakto kodas 2",Normal,SuretyProvider2,false,B2BLoanApp_CUSClass);
    EditField(h2,v+=vs,100,"Duomen÷ prieiga iki",ViewOnly,Surety2AccessToDataUntil,false,PasteCurDate);
    vm = v;
    CheckBox(h2,v=v+vs,0,"Turto areätai",Surety2AssetArrests);
    CheckBox(h2,v=v+vs,0,"Bankrotas",Surety2Bankruptcy);
    CheckBox(h2,v=v+vs,0,"Nekredituojamas",Surety2NotCreditable);
    CheckBox(h2,v=v+vs,0,"Teismo bylos pernai",Surety2Courts);
    v = vm;
    ButtonFrame(h2-100,v=v+40,90,2,"Type");
    RadioButton(h2-100,v,0,0,"Laisvai samdomas",Surety2Type);
    RadioButton(h2-100,v+=16,1,0,"Specialistas",Surety2Type);  
    HalPushButton(h2,v+=vs+30,h2+120,v+25,"ShowB2BAppScoring2","Vertinimo balas");
    HalPushButton(h2-90,v,h2-10,v+25,"ShowB2BAppRemSur2","Remove"); v = v + 10;
    EditField(h2,v+=vs,100,"Vardas",Normal,Surety2Name,false,0);
    EditField(h2,v+=vs,100,"Pozicija",Normal,Surety2Position,false,JobTitleSClass);
    EditField(h2,v+=vs,100,"Tel. nr.",Normal,Surety2Phone,false,0);
    EditField(h2,v+=vs,100,"E-paätas",Normal,Surety2eMail,false,0);
    EditField(h2,v+=vs,100,"ID",Normal,Surety2ID,false,0);

    EditField(h2,v+=vs,130,label1,Normal,Surety2Addr0,false,0);
    EditField(h2,v+=vs,130,label2,Normal,Surety2Addr1,false,0);
    EditField(h2,v+=vs,130,label3,Normal,Surety2Addr2,false,0);
    EditField(h2,v+=vs,130,label4,Normal,Surety2Addr3,false,0);
    EditField(h2,v+=vs,130,label5,Normal,Surety2Addr4,false,0);
    ButtonFrame(h2,v=v+40,150,4,"Amìiaus grup˜");
    RadioButton(h2,v,0,0,"Maìiau nei 21",Surety2AgeGroup);
    RadioButton(h2,v+=16,1,0,"21-27",Surety2AgeGroup);  
    RadioButton(h2,v+=16,2,0,"28-64",Surety2AgeGroup);  
    RadioButton(h2,v+=16,3,0,"65+",Surety2AgeGroup);  
  end;
  if (LAr.SuretyCnt>=3) then begin
    StaticText(h3,v=26,"Laiduotojas 3",false);
    CheckBox(h3,v=v+vs,0,"Kontr. pak. savininkas",MajorityOwner3);
    EditField(h3,v+=vs,100,"Kontakto kodas 3",Normal,SuretyProvider3,false,B2BLoanApp_CUSClass);
    EditField(h3,v+=vs,100,"Duomen÷ prieiga iki",ViewOnly,Surety3AccessToDataUntil,false,PasteCurDate);
    vm = v;
    CheckBox(h3,v=v+vs,0,"Turto areätas",Surety3AssetArrests);
    CheckBox(h3,v=v+vs,0,"Bakrotas",Surety3Bankruptcy);
    CheckBox(h3,v=v+vs,0,"Ne kredituojama",Surety3NotCreditable);
    CheckBox(h2,v=v+vs,0,"Teismo bylos pernai",Surety3Courts);
    v = vm;
    ButtonFrame(h3-100,v=v+40,90,2,"Tipas");
    RadioButton(h3-100,v,0,0,"Savininkas",Surety3Type);
    RadioButton(h3-100,v+=16,1,0,"Specialistas",Surety3Type);  
    HalPushButton(h3,v+=vs+30,h3+120,v+25,"ShowB2BAppScoring3","Scoring Rate");
    HalPushButton(h3-90,v,h3-10,v+25,"ShowB2BAppRemSur3","Remove"); v = v + 10;
    EditField(h3,v+=vs,100,"Vardas",Normal,Surety3Name,false,0);
    EditField(h3,v+=vs,100,"Pozicija",Normal,Surety3Position,false,JobTitleSClass);
    EditField(h3,v+=vs,100,"Tel. nr.",Normal,Surety3Phone,false,0);
    EditField(h3,v+=vs,100,"E-paätas",Normal,Surety3eMail,false,0);
    EditField(h3,v+=vs,100,"ID",Normal,Surety3ID,false,0);

    EditField(h3,v+=vs,130,label1,Normal,Surety3Addr0,false,0);
    EditField(h3,v+=vs,130,label2,Normal,Surety3Addr1,false,0);
    EditField(h3,v+=vs,130,label3,Normal,Surety3Addr2,false,0);
    EditField(h3,v+=vs,130,label4,Normal,Surety3Addr3,false,0);
    EditField(h3,v+=vs,130,label5,Normal,Surety3Addr4,false,0);
    ButtonFrame(h3,v=v+40,150,4,"Amìiaus grup˜");
    RadioButton(h3,v,0,0,"Maìiau nei 21",Surety3AgeGroup);
    RadioButton(h3,v+=16,1,0,"21-27",Surety3AgeGroup);  
    RadioButton(h3,v+=16,2,0,"28-64",Surety3AgeGroup);  
    RadioButton(h3,v+=16,3,0,"65+",Surety3AgeGroup);  
  end;
  switch (LAr.SuretyCnt) begin
    case 0:  
      HalPushButton(h2,v=26,h2+120,v+25,"B2BLoanAppAddSurety","Prid˜ti laiduotojˆ"); v = v + 10;
    case 1:  
      HalPushButton(h2,v=26,h2+120,v+25,"B2BLoanAppAddSurety","Prid˜ti laiduotojˆ"); v = v + 10;
    case 2:
      HalPushButton(h3,v=26,h3+120,v+25,"B2BLoanAppAddSurety","Prid˜ti laiduotojˆ"); v = v + 10;
  end;

  Tile(tilenr,600,true,tilenr,LateRating); tilenr = tilenr + 1;
  EditField(h,v=6,100,"V˜lavimo reitingas",Normal,LateRating,true,0);
  EditField(h2=365,v,100,"Bankroto reitingas",Normal,BankruptcyRating,true,0);
  EditField(h3,v,100,"¯steingtas",Normal,Established,false,PasteCurDate);
  EditField(h,v+=vs,100,"M˜n. paskolos °moka",Normal,MonthlyLoadPayment,true,0);
  EditField(h2,v,100,"Esamos skolos",Normal,CurrentDebts,true,0);
  EditField(h3,v,100,"Paskutin˜ iämok. skola",Normal,LastRepaymentDate,false,PasteCurDate); 
  CheckBox(h,v+=vs,0,"Esamos teismo bylos",OngoingCourtCases);
  CheckBox(h2,v,0,"Buvusios teismo bylos",HistoricalCourtCases);
  CheckBox(h3,v,0,"Esami turto areätai",OngoingAssetArrests);
  CheckBox(h,v+=vs,0,"Buv« turto areätai",HistoricalAssetArrests);
  CheckBox(h2,v,0,"Bakrotas",BankruptcyFlag);
  CheckBox(h3,v,0,"Likvidacija",LiquidationFlag);
  CheckBox(h,v+=vs,0,"Savinink÷ pasikeitimai",OwnershipChanges);
  CheckBox(h2,v,0,"Publicity Information",Publicity);
  CheckBox(h3,v,0,"Being Sued",BeingSued);
  CheckBox(h,v+=vs,0,"Ongoing Debt Collections",DebtCollections);
  CheckBox(h2,v,0,"Unreliable Company",UnreliableComp);
 
//  EditField(h,v+=vs,100,"Ilgalaik. turto vert˜",Normal,AssetValue,false,0);
  EditField(h,v+=vs,100,"50% apyvart. pirk˜jai",Normal,HalfRevenueCustomers,true,0);
  EditField(h2,v,100,"Nuosavyb˜",Normal,Equity,true,0);
  EditField(h3,v,100,"50% iälaid÷ tiek˜jai",Normal,HalfCostSuppliers,true,0);
  EditField(h,v+=vs,100,"M˜nesiai",Normal,RevMonths,true,0);
  EditField(h2,v,100,"Pajamos",Normal,Revenue,true,0);
  EditField(h3,v,100,"Metin˜s pajamos",Normal,AnnualRevenue,true,0);

  ButtonFrame(h-50,v=v+40,640,1,"Current");
  EditField(h,v,80,"Pelnas",Normal,CurProfit,true,0);
  EditField(h2=320,v,80,"Gautinos sumos",Normal,CurReceivables,true,0);
  EditField(h3-100,v,80,"Mok˜tinos sumos",Normal,CurPayables,true,0);
  EditField(h3+40,v,80,"Viso",Normal,CurTotal,true,0);

  ButtonFrame(h-50,v=v+40,640,1,"Buv«");
  EditField(h,v,80,"Pelnas",Normal,PrevProfit,true,0);
  EditField(h2,v,80,"Gautinos sumos",Normal,PrevReceivables,true,0);
  EditField(h3-100,v,80,"Mok˜tinos sumos",Normal,PrevPayables,true,0);
  EditField(h3+40,v,80,"Viso",Normal,PrevTotal,true,0);

  vm = v + 50;
  MatrixBegin(10,v+=50,-55,-1,-,50);
  Flip(1);
  MatCol(1,20,"Laikotarpis",0,Period,false,0);
  MatCol(1,80,"V˜lavimo reitingas",0,LateRating,true,0);
  MatCol(1,180,"Bankroto reitingas",0,BankruptcyRating,true,0);
  MatCol(1,280,"Apyvarta",0,Turnover,true,0);
  MatCol(1,380,"Bendras pelnas",0,GrossProfit,true,0);
  Flip(2);
  MatCol(1,80,"Metai",0,Year,false,0);
  MatCol(1,180,"Apyvarta",0,Turnover,true,0);
  MatCol(1,280,"Darbuotojai",0,EmployeeCnt,true,0);
  MatCol(1,380,"Vid. atlyginimas",0,AvSalary,true,0);
  Flip(3);
  MatCol(1,80,"M˜nesiai",0,Month,false,0);    
  MatCol(1,180,"¯mon˜s automobiliai",0,OwnedCompanyCars,true,0);
  MatCol(1,280,"Vert˜",0,OwnedCarsValue,true,0);
  MatCol(1,380,"¯mon˜s naudojami auto.",0,UsedCompanyCars,true,0);
  MatCol(1,480,"Vert˜",0,UsedCarsValue,true,0);
  Flip(4);
  MatCol(1,80,"Pramon˜s äaka",0,Industry,false,0);
  MatCol(1,200,"Tikrinti m˜nes°",0,MonthChecks,false,0);
  MatCol(1,300,"Tikrinti ketvirt°",0,QuarterChecks,false,0);
  MatCol(1,400,"Tikrinti pus« met÷",0,HalfYearChecks,false,0);
  Flip(5);
  MatCol(1,80,"M˜nesiai",0,Month,false,0);
  MatCol(1,150,"Gautinos sumos",0,Receivables,true,0);
  MatCol(1,220,"Mok˜tinos sumos",0,Payables,true,0);
  MatCol(1,290,"Viso",0,DiffRecPay,true,0);
  Flip(6);
  MatCol(1,80,"M˜nesiai",0,Month,false,0);    
  MatCol(1,150,"Pastatai",0,EstateCnt,true,0);
  MatCol(1,220,"Vert˜",0,EstateValue,true,0);
  MatCol(1,290,"Darbuotojai",0,EmployeeCnt,true,0);  
  MatCol(1,380,"Vid. atlyginimas",0,AvSalary,true,0);
  EndMatrix;

  VTab(-40,v=vm,-6,v+=vs,ToolFlip,1,"A");
  VTab(-40,v,-6,v+=vs,ToolFlip,2,"B");
  VTab(-40,v,-6,v+=vs,ToolFlip,3,"C");
  VTab(-40,v,-6,v+=vs,ToolFlip,4,"D");
  VTab(-40,v,-6,v+=vs,ToolFlip,5,"E");
  VTab(-40,v,-6,v+=vs,ToolFlip,6,"F");

  Tile(tilenr,600,true,tilenr,BuyBankruptcyRating); tilenr = tilenr + 1;
  EditField(h,v=6,100,"Pirk. bankroto reit.",Normal,BuyBankruptcyRating,true,0);
  EditField(h2=365,v,100,"Pirk˜jas °kurtas",Normal,BuyerEstablished,false,PasteCurDate);
  EditField(h,v+=vs,100,"Pirk˜jo apyvarta",Normal,BuyerTurnover,true,0);
 
  ButtonFrame(h,v=v+40,200,3,"Faktoringo tipas");
  RadioButton(h,v,0,0,"Atidarytas",FactoringType);
  RadioButton(h,v+=16,1,0,"Uìdarytas mðs÷ sˆsk.",FactoringType);  
  RadioButton(h,v+=16,2,0,"Uìdaryta pirk˜jo sˆsk.",FactoringType);  

  SpecialMenu("Fill Data from rekvizitai.lt",' ',1,"");
  SpecialMenu("Fill Data from SoDra",' ',2,"");
  SpecialMenu("Get Company Credit Data",' ',3,"");
  SpecialMenu("Get Surety Provider Data",' ',4,"");
  SpecialMenu("Evaluation Report",' ',5,"DoEvalReportDsm");
  SpecialMenu("Customer Status",'e',6,"CUStatusB2BLoanAppDsm");
  SpecialMenu("Creditinfo.lt",'e',6,"GetCreditinfoStatDsm");
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0); 
  SpecialMenu("E-mail",' ',1,""); 
  SpecialMenu("Credit Agreement",' ',1,"B2BLoanAppCreateCredManDsm"); 

  EndWindow;
end;

window BankAccountSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;

  WindowBegin("Banko sˆsk.",BankAccountSClass,CGother,RcType);
  SetWRect(64,80,500,298);
  DataList(0,0,-1,-1,"DLPasteBankAccount");
  DataListColumn(1,6,120,AdjLeft,"DLBankCode","Banko kodas",M4Str);
  DataListColumn(1,256,-32,AdjLeft,"DLBankAccount","Banko sˆsk.",M4Str);  
  EndWindow;
end;

window CreditAgreementsRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real h,v;
  WindowBegin("Kredito sutartys sÄ…raÅ¡as",CreditAgreementsRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  PeriodField(h=140,v=6,"Periodas");
  EditFieldTL(h,v+=20,150,"Klientas",M4UStr,Normal,40,f1,false,CUSClass);
  EditFieldTL(h,v+=20,150,"Tipas",M4UStr,Normal,40,f2,false,CredManTypeSClass);
  EditFieldTL(h,v+=20,150,"Klas˜",M4Code,Normal,40,f3,false,OrderClassSClass);
  EditFieldTL(h,v+=20,150,"Balanso Data",M4Date,Normal,0,d1,false,PasteCurDate);
  CheckBox(h,v+=30,0,"¯traukti nepatvirtintus",flags[3]);
  CheckBox(h,v+=30,0,"¯traukti be OK",flags[4]);
  CheckBox(h,v+=30,0,"¯traukti baigtus",flags[5]);
  EndWindow;
end;

window WebFAQLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("FAQ",WebFAQLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(WebFAQDClass);
  UseView(WebFAQVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Name",Question,false);
  RlCol   (-90,-90,"Class.",Class,false);
  EndWindow;
end;

window WebFAQDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real f,h,hs,hw,v,vs;
  WindowBegin("FAQ",WebFAQDClass,CGview,-);
  SetWRect(20,80,760,380);
  h = 120; v = 6; vs=20;
  UseView(WebFAQVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  EditField(h,v+=vs,120,"Class",Normal,Class,false,WebFAQCategorySClass);
  EditField(h,v+=vs,-40,"Question",Normal,Question,false,0);

  v = v + 30;
  TextField(0,v,-1,-1,Answer,0);

  EndWindow;
end;
window HtmlWebFAQDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real f,h,hs,hw,v,vs;
  WindowBegin("FAQ",HtmlWebFAQDClass,CGview,-);
  SetWRect(20,80,760,380);
  h = 120; v = 6; vs=20;
  UseView(WebFAQVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  EditField(h,v+=vs,120,"Class",Normal,Class,false,WebFAQCategorySClass);
  EditField(h,v+=vs,-40,"Question",Normal,Question,false,0);

  v = v + 30;
  if (GuiType==kGuiCocoa or GuiType==kGuiWPF) then begin
    v = v + 2 + 2;
    hs = 0;
    hw = 30;
    h = 20;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditBold,"Bold",kButtonStyleTest,1070);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditItalic,"Italic",kButtonStyleTest,1078);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditUndeline,"Underline",kButtonStyleTest,1087);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditStrikeThrough,"Strikethrough",kButtonStyleTest,1085);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditUnorderedList,"U.L.",kButtonStyleTest,1081);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditOrderedList,"O.L.",kButtonStyleTest,1080);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditLeft,"Left",kButtonStyleTest,1088);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditCenter,"#Centre#",kButtonStyleTest,1071);
    // fill??
    PushButton2(h+=hs,v,h+=hw,22,ToolEditRight,"Right",kButtonStyleTest,1089);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditCopy,"Copy",kButtonStyleTest,1072);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditCut,"Cut",kButtonStyleTest,1073);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditPaste,"Paste",kButtonStyleTest,1074);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditFontColor,"Font Color",kButtonStyleTest,1075);
    if (GuiType==kGuiWPF) then begin
      PushButton2(h+=hs,v,h+=hw,22,ToolEditTextBg,"Text Bg.",kButtonStyleTest,1086);
    end;
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditLink,"Link",kButtonStyleTest,1076);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditImage,"Image",kButtonStyleTest,1077);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditOutdent,"Outdent",kButtonStyleTest,1082);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditIndent,"Indent",kButtonStyleTest,1079);
    h = h + 8;
    PushButton2(h+=hs,v,h+=hw,22,ToolEditUndo,"Undo",kButtonStyleTest,1084);
    PushButton2(h+=hs,v,h+=hw,22,ToolEditRedo,"Redo",kButtonStyleTest,1083);
    v = v + 10 + vs;
    h = 20;
  end;

  TextField(0,v,-1,-1,Answer,0);

  EndWindow;
end;

window WebFAQCategoryLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("FAQ Categories",WebFAQCategoryLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(WebFAQCategoryDClass);
  UseView(WebFAQCategoryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window WebFAQCategorySClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste FAQ Category",WebFAQCategorySClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(WebFAQCategoryDClass);
  UseView(WebFAQCategoryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window WebFAQCategoryDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("FAQ Category",WebFAQCategoryDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(WebFAQCategoryVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Code",Normal,Code,false,);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EndWindow;
end;

window WebLoanCalcLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Loan Calculators",WebLoanCalcLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(WebLoanCalcDClass);
  UseView(WebLoanCalcVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Type",Type,false,Type);
  SearchField("Search");
  EndWindow;
end;

window WebLoanCalcSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Loan Calculator",WebLoanCalcSClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(WebLoanCalcDClass);
  UseView(WebLoanCalcVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Type",Type,false,Type);
  SearchField("Search");
  EndWindow;
end;

window WebLoanCalcDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Loan Calculator",WebLoanCalcDClass,CGview,-);
  SetWRect(20,80,600,339);
  Sizeable(-1,-1,0,0);
  UseView(WebLoanCalcVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"Type",Normal,Type,false,);
  EditField(h,v+=vs,50,"AmountMin",Normal,AmountMin,false,0);
  EditField(h,v+=vs,50,"AmountMax",Normal,AmountMax,false,0);
  EditField(h,v+=vs,50,"AmountStep",Normal,AmountStep,false,0);
  EditField(h,v+=vs,50,"TermMin",Normal,TermMin,false,0);
  EditField(h,v+=vs,50,"TermMax",Normal,TermMax,false,0);
  EditField(h,v+=vs,50,"TermStep",Normal,TermStep,false,0);
  MatrixBegin(10,v+=vs+40,-40,-20,-,99);
  MatCol(1,24,"Months",0,Months,false,0);
  MatCol(1,74,"Rate",0,Rate,false,0);
  EndMatrix;
  EndWindow;
end;

window CredManFactLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Factoring Limits",CredManFactLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManFactDClass);
  UseView(CredManFactVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Credit Agreement",CredManNr,false,CredManNr);
  SearchField("Search");
  EndWindow;
end;

window CredManFactDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Limits",CredManFactDClass,CGview,-);
  SetWRect(20,80,600,339);
  UseView(CredManFactVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(0,16,-16,-50,-,30);
  MatCol(1,24,"Customer",0,CustCode,false,CUSClass);
  MatCol(1,120,"Name",0,CustName,false,0);
  MatCol(1,-80,"Max Limit",0,MaxLimit,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  EditField(-120,-30,80,"Total",ViewOnly,Total,true,0);
  EndWindow;
end;

window CredManFactInvoiceLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Factoring Invoices",CredManFactInvoiceLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManFactInvoiceDClass);
  UseView(CredManFactInvoiceVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  RlCol(100,100,"Agreement",CredManNr,false);
  RlCol(196,196,"Customer",CustCode,false);
  RlCol(196,196,"Invoice Nr.",InvoiceNr,false);
  SearchField("Search");
  EndWindow;
end;

window CustCredManFactInvoiceWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Invoices",CustCredManFactInvoiceWClass,CGOther,RcType);
  SetWRect(20,80,760,298);
  UseView(RcVc);
  EditField(h=100,v=55,50,"Dummy",Normal,f1,false,0);
  RecordList2(4,17,-21,-1,"CredManFactInvoiceVc");
  RlColKey(4,4,"Ser Nr.",SerNr,false,SerNr);
  RlCol(100,100,"Agreement",CredManNr,false);
  RlCol(170,170,"Customer",CustCode,false);
  RlCol(250,250,"Invoice Nr.",InvoiceNr,false);
  RlCol(-330,-330,"Due Date",DueDate,false);
  RlCol(-240,-240,"Total",TotalSum,false);
  RlCol(-180,-180,"Received",ReceivedAmount,false);
  RlColTL(-120,-120,"SL",M4Mark,InitSLInvFlag,false);
  RlColTL(-90,-90,"PL",M4Mark,InitPLInvFlag,false);
  RlColTL(-60,-60,"Paid",M4Mark,CustPaidFlag,false);
  RlColTL(-30,-30,"Fee",M4Mark,FeeGenFlag,false);
  //SpecialMenu("Regress",'',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Add Invoice",'',1,"CustCredManFactInvoiceAddSm");
  SpecialMenu("Generate Fee Invoice",'',1,"CustCredManFactInvoiceCreateFeeInvSm");
  EndWindow;
end;

window CredManFactInvoiceDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Invoice",CredManFactInvoiceDClass,CGview,-);
  SetWRect(20,80,600,339);
  UseView(CredManFactInvoiceVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"SerNr",Normal,SerNr,false,0);
  EditField(h,v+=vs,50,"Cred. Agr.",Normal,CredManNr,false,CredManSClass);
  EditField(h,v+=vs,50,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,50,"InvoiceNr",Normal,InvoiceNr,false,0);
  EditField(h,v+=vs,50,"Inv. Date",Normal,InvDate,false,0);
  EditField(h,v+=vs,50,"Due Date",Normal,DueDate,false,0);
  EditField(h,v+=vs,50,"Total Sum",Normal,TotalSum,false,0);
  EditField(h,v+=vs,50,"Received Amount",Normal,ReceivedAmount,false,0);
  CheckBox(h,v+=20,0,"Buyer Invoice",InitSLInvFlag);
  CheckBox(h,v+=20,0,"Customer Invoice",InitPLInvFlag);
  CheckBox(h,v+=20,0,"Buyer has Paid",CustPaidFlag);
  CheckBox(h,v+=20,0,"Fee Invoice",FeeGenFlag);
  EndWindow;
end;

window NewCredManFactInvoiceWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Factoring Invoice",NewCredManFactInvoiceWClass,CGOther,RcType);
  SetWRect(20,80,600,259);
  UseView(RcVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v+=vs,100,"Customer",Normal,f1,false,CUSClass);
  EditField(h2=300,v,-40,"Name",Normal,searchstr,false,0);
  EditField(h,v+=vs,100,"Invoice Nr.",Normal,ObjStr,false,0);
  EditField(h,v+=vs,90,"Inv. Date",Normal,d1,false,PasteCurDate);
  EditField(h,v+=vs,90,"Due Date",Normal,d2,false,PasteCurDate);
  EditField(h,v+=vs,90,"Total Sum",Normal,vals0,false,0);
  HalPushButton(h,v+=vs,h+150,v+=20,"NewCredManFactInvoiceWClassProceed","Add and Create Invoices");
  EndWindow;
end;

window FactoringTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Settings",FactoringTClass,CGSbl,-);
  SetBlid(FactoringBlock);
  SetWRect(20,80,500,298);
  vs=20; h=160; vs2=16; hm=-100;
  ButtonFrame(h-100,v=30,250,4,"Buyer's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,BuyerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Object",Normal,BuyerObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Item",Normal,BuyerItem,false,INSClass);

  ButtonFrame(h-100,v+=50,250,5,"Seller's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,SellerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Account",Normal,SellerAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,SellerVATCode,false,VATCodeSClass);
  EditField(h,v+=vs,100,"Object",Normal,SellerObject,false,ObjSClass);

  EndWindow;
end;
