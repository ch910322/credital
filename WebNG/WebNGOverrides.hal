/*
This is a template file for using stardard functions in halcust. No need to use webng.hal file or other files to just add new functions
This supports adding new web texts, adding new special elements, new structure types and web actions (both updating and non-updating)
*/
external procedure ShowSmartIDIdentification(record WebNGElementVc);
external procedure SmartIDWebActions(string);
external inner function string 255 removenextlistitem(var string,string);
external procedure ShowPartnerList();
external procedure ShowBannerList(record WebNGElementVc);
external procedure ShowFAQList();
external procedure ShowLoanApplicationOnWeb(record WebNGElementVc);

global
function boolean ShowSpecialWebElementInternal(record WebNGElementVc WEr)
begin
  boolean res;

  res = true;
  switch (WEr.Type) begin
    case 120:
      //ShowLoanApp(WEr);
    case 121:
      ShowSmartIDIdentification(WEr);
    case 122:
      ShowPartnerList;
    case 123:
      ShowBannerList(WEr);
    case 124:
      ShowFAQList;
    case 125:
      ShowLoanApplicationOnWeb(WEr);
    otherwise
      res = false;
  end;
  ShowSpecialWebElementInternal = res;
  return;
end;

global
function Boolean ShowInternalWebApp(Integer lasttype,record WebNGStructVc WSr,string mpath)
begin
  Boolean res;

  //res = true;
  switch (lasttype) begin
  otherwise
    res = false;
  end;
  ShowInternalWebApp = res;
  return;
end;

global
function Boolean InternalNodeIsApplication(Integer nodetype)
begin
  Boolean res;
  
  /*
  if (nodetype==kStructTypeWatchpointApp) then begin
      res = true;
  end;
  */

  InternalNodeIsApplication = res;
  return;
end;

global
function string 255 CheckInternalStrings(Longint strno)
begin
  string 255 res;

  SetLangMode(LangLithuanian,"LIT",0);

  switch (strno) begin
    case 70000: res = "test";
    case 70001: res = "Jðs÷ °mon˜s pavadinimas";
    case 70002: res = "¯veskite °mon˜s pavadinimˆ";
    case 70003: res = "Jðs÷ el. paäto adresas";
    case 70004: res = "¯veskite el.paäto adresˆ";
    case 70005: res = "Telefonas";
    case 70006: res = "¯veskite telefono numer°";
    case 70007: res = "Finansavimo poreikis";
    case 70008: res = "Faktoringo terminas";
    case 70009: res = "Aä sutinku, kad äioje paraiäkoje pateikti mano duomenys bðt÷ tvarkomi ãCredital versluiÒ (UAB ã¯moka lengvaiÒ) verslo paskolos sudarymo tikslais.";
    case 70010: res = "Aä sutinku, kad mano nurodytu el. paätu susisiektum˜te su manimi tiesiogin˜s rinkodaros tikslais";
    case 70011: res = "Si÷sti uìklausˆ";
    case 70012: res = "Partneriai";
    case 70013: res = uchr(128);
    case 70014: res = "m˜n.";
    
  end;

  CheckInternalStrings = res;
  return;
end;


global
updating function Boolean InternalUpdatingActions(string action)
begin
  Boolean res;

/*
  switch (action) begin
    case "aa":
      res = true;

  end;
*/
  InternalUpdatingActions = res;
  return;
end;

global
function Boolean DoOuterWebActions(string action)
begin
  string 255 app,naction;
  Boolean res;

  //split
  naction = action;
  app = removenextlistitem(naction,".");

  switch (app) begin
    case "smartid":
      SmartIDWebActions(naction);
      res = true;
  end;

  DoOuterWebActions = res;
  return;
end;
