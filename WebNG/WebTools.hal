external inner procedure SetContentTypeForExtension(string);
external inner function string 255 ToolWebNGTranslateText2(Longint);
external inner function Boolean GetNextCustNr(var string);

global
procedure GetWebCampaignAttachedImages(record WebCampaignVc WCr,var array string aName)
begin
  Integer i;
  record Attach2Vc Attachr;
  record RLinkVc RLr;

  i = 1;
  while (ReadRecordLink(WCr,i,Attachr,RLr)) begin
    aName[aName.length] = Attachr.FileName;
    i = i + 1;
  end;

  return;
end;


global
procedure ShowPartnerList(record WebNGElementVc WEr)
begin
  record WebPartnerBlock WPb;
  row WebPartnerBlock WPbrw;
  record CClassVc CClassr;
  record CUVc CUr;
  Integer i,rwcnt,cnt;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer type;
  
  BlockLoad(WPb);
  
  type = StringToInt(WEr.HALFunc);

  if (type==1) then begin
    WebOutString("<div class='row about-partner-head'><div class='col'>" & ToolWebNGTranslateText2(70020) & "</div></div>");
    WebOutString("<div class='row about-partner-list'><div class='col partner-media-list owl-carousel'>");
  end else begin
    WebOutString("<div class='col-2'>" & ToolWebNGTranslateText2(70012) & "</div>");
    WebOutString("<div class='col-10'><div class='partner-full-list owl-carousel'>");
  end;

  rwcnt = MatRowCnt(WPb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WPb,i,WPbrw);
    if (type==WPbrw.Type or type==3) then begin
      CClassr.Code = WPbrw.Classification;
      if (ReadFirstMain(CClassr,1,true)) then begin    
        ResetLoop(CUr);
        RecordClear(CUr);
        cnt = 0;
        while (LoopKey("Classification:" & WPbrw.Classification,CUr,1,true)) begin
          if (ReadRecordLink(CUr,1,Attachr,RLr)) then begin
            cnt = cnt + 1;
            WebOutString("<div>");
            if (nonblank(CUr.wwwAddr)) then begin
              WebOutString("<a href='" & CUr.wwwAddr & "' target='_blank'>");        
            end;
            WebOutString("<div><img src='/WebShowPartnerImage.hal?id=" & CUr.UUID & "&code=" & CUr.Code & "'></div>");
            if (nonblank(CUr.wwwAddr)) then begin
              WebOutString("</a>");
            end;
            
            WebOutString("</div>");
          end;
        end;
      end;
    end;
  end;
  WebOutString("</div></div>");

  return;
end;

global webpublic
procedure WebShowPartnerImage()
begin
  record CUVc CUr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  string 255 ext;

  CUr.UUID = StringToUUID(WebGetArg("id"));
  if (ReadFirstKey("UUID",CUr,1,true)) then begin
    if (CUr.Code==WebGetArg("code")) then begin
      if (ReadRecordLink(CUr,1,Attachr,RLr)) begin
        ext = right(Attachr.FileName,4);
        SetContentTypeForExtension(ext);
        WebSetContentDisposition("inline; filename=" & Attachr.FileName);
        WebOutAttachment(Attachr.SerNr);
      end;
    end;
  end;

  return;
end;

global webpublic
procedure WebShowCampaignImage()
begin
  record WebCampaignVc WCr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  string 255 ext;
  Integer i;

  WCr.SerNr = StringToLongint(WebGetArg("id"));//this should be fine. we don't have anything to hide here
  if (ReadFirstMain(WCr,1,true)) then begin
    i = 1;
    while (ReadRecordLink(WCr,i,Attachr,RLr)) begin
      if (blank(WCr.Image) or WCr.Image==Attachr.FileName) then begin
        ext = right(Attachr.FileName,4);
        SetContentTypeForExtension(ext);
        WebSetContentDisposition("inline; filename=" & Attachr.FileName);
        WebOutAttachment(Attachr.SerNr);
        goto LWebShowCampaignImage;
      end;
      i = i + 1;
    end;
  end;
LWebShowCampaignImage:;
  return;
end;


procedure ShowSingleBanner(record WebCampaignVc WCr)
begin
  Integer i;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  
  i = 1;
  while (ReadRecordLink(WCr,i,Attachr,RLr)) begin
    if (blank(WCr.Image) or WCr.Image==Attachr.FileName) then begin
      WebOutString("<div class='web-campaign'><img src='/WebShowCampaignImage.hal?id=" & WCr.SerNr & "'></div>");
      goto LShowSingleBanner;
    end;
    i = i + 1;
  end;

LShowSingleBanner:;
  return;
end;

global
procedure ShowBannerList(record WebNGElementVc WEr)
begin
  record WebCampaignVc WCr;
  Integer type;
  
  type = StringToInt(WEr.HALFunc);
  WCr.Type = type;
  WCr.EndDate = CurrentDate;
  if (ReadFirstKey("TypeEndDate",WCr,2,false)) then begin
    if (WCr.Type==type) then begin
      if (WCr.StartDate<=CurrentDate and WCr.EndDate>=CurrentDate) then begin
        ShowSingleBanner(WCr);
      end;
    end;
  end;

  return;
end;

global
procedure ShowFAQList()
begin
  record WebFAQVc WFr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  area a;
  Longint asz,pos,l;
  xml x;
  string 255 tstr;
  record WebFAQCategoryVc FCr;

  //Show categories
  WebOutString("<div class='row faq_cat_list_wrap'>");
  WebOutString("<div class='col faq_cat_list'>");
  WebOutString("<div class='row'>");
  while (LoopMain(FCr,1,true)) begin
    WebOutString("<div class='faq_cat col-auto' id='" & FCr.Code & "'>" & FCr.Comment & "</div>");//possibly we should do a translation, but not yet
  end;
  WebOutString("</div>");
  WebOutString("</div>");
  WebOutString("<div class='col-4'>");
  WebOutString("<div class='searchbox'><input type='text' placeholder='" & ToolWebNGTranslateText2(70019) & "'></div>");
  WebOutString("</div>");
  WebOutString("</div>");


  WebOutString("<div class='row faq_item_list'>");
  while (LoopMain(WFr,1,true)) begin
    if (ReadRecordLink(WFr,1,Attachr,RLr)) begin
      SetAreaZeroSize(a);
      asz = AttachFileSize(Attachr);    
      LoadAttachFilePartToArea(Attachr,0,asz,a);

      WebOutString("<div class='faq-item' category='" & WFr.Class & "'>");
      WebOutString("<div class='faq-q'>" & WFr.Question & "</div>");
      WebOutString("<div class='faq-answer'>");
      tstr = "";
      pos = FindStringInArea("<body",a);
      if (pos>0) then begin
        pos = pos + 6;
        l = GetAreaLength(a)-pos-13;
        tstr = GetStringFromArea(a,pos,l);
        SetAreaZeroSize(a);
        AddTextToArea(tstr,a);
        pos = FindStringInArea(">",a);
        if (pos>0) then begin
          pos = pos + 1;
          tstr = GetStringFromArea(a,pos,GetAreaLength(a)-pos-1);
        end;
      end;
  
      WebOutString(tstr);
      WebOutString("</div>");
      WebOutString("</div>");
    end;
  end;
  WebOutString("</div>");

  return;
end;

procedure ShowSimpleField(string type,string name,string label,string placeholder)
begin
  
  WebOutString("<div class='app_textfield'><div class='label'>" & label & "</div><div class='field'><input type='" & type & "' placeholder='" & placeholder & "'></div></div>");


  return;
end;

procedure ShowSlideBar(Integer min,Integer max,Integer step,string name,string label,string add,Boolean inputf)
begin
  
//70007,70008
  WebOutString("<div class='single_small_slider'>");
  WebOutString("<div class='slider_label'>" & label & "</div>");
  if (inputf) then begin
    WebOutString("<div class='slider-update'><input type='text' name='" & name & "_inp' add='" & add & "'></div>");
    WebOutString("<div class='slider-input'><input type='range' name='" & name & "' id='cowbell' name='cowbell' min='" & min & "' max='" & max & "' value='" & (max/2) & "' step='" & step & "'></div>");
  end else begin
    WebOutString("<div class='slider-input'><input type='range' name='" & name & "' id='cowbell' name='cowbell' min='" & min & "' max='" & max & "' value='" & (max/2) & "' step='" & step & "'></div>");
    WebOutString("<div class='slider-update'><input type='text' name='" & name & "_inp' add='" & add & "'></div>");
  end;
  WebOutString("<script>$('input[name=\"" & name & "\"]').change()</script>");
  WebOutString("</div>");
  return;
end;

procedure ShowCheckBox(string name,string text)
begin

  WebOutString("<div class='app_checkbox'><div class='field'><input type='checkbox' name='" & name & "'></div><div class='label'>" & text & "</div></div>");

  return;
end;

global
procedure ShowLoanApplicationOnWeb(record WebNGElementVc WEr)
begin
  record WebLoanCalcVc WLCr;
  row WebLoanCalcVc WLCrw;
  Integer amount_min,amount_max,amount_step,term_min,term_max,term_step;
  Integer type;

  switch (WEr.HALFunc) begin
    case "Verslo": type = 0;
    case "Faktoringas": type = 1;
    case "Atsiskaitymo": type = 2;
  end;

  WLCr.Type = type;
  if (ReadFirstMain(WLCr,1,true)) then begin
  
    amount_min = WLCr.AmountMin;
    amount_max = WLCr.AmountMax;
    amount_step = WLCr.AmountStep;
    term_min = WLCr.TermMin;
    term_max = WLCr.TermMax;
    term_step = WLCr.TermStep;


    WebOutString("<div class='loan_app'><form method='POST'>");
    WebOutString("<div class='loan_small_title'>" & ToolWebNGTranslateText2(70144) & "</div>");
    WebOutString("<div class='loan_small_descr'>" & WLCr.WebText & "</div>");
/*
    ShowSimpleField("text","compname",ToolWebNGTranslateText2(70001),ToolWebNGTranslateText2(70002));
    ShowSimpleField("email","email",ToolWebNGTranslateText2(70003),ToolWebNGTranslateText2(70004));
    ShowSimpleField("text","phone",ToolWebNGTranslateText2(70005),ToolWebNGTranslateText2(70006));
*/
    if (amount_min>0) then begin
      ShowSlideBar(amount_min,amount_max,amount_step,"amount",ToolWebNGTranslateText2(70007),ToolWebNGTranslateText2(70013),true);

    end;
    if (term_min>0) then begin
      ShowSlideBar(term_min,term_max,term_step,"term",ToolWebNGTranslateText2(70008),ToolWebNGTranslateText2(70014),true);
    end;
/*
    ShowCheckBox("accept",ToolWebNGTranslateText2(70009));
    ShowCheckBox("newsletter",ToolWebNGTranslateText2(70010));
*/
    WebOutString("<div class='loan_small_bottom gradient'>");
    WebOutString("<div class='loan_small_totals'>");
    WebOutString("<div class='loan_small_totals_val'></div>");
    WebOutString("<div class='loan_small_totals_text'>" & ToolWebNGTranslateText2(70147) & "</div>");
    WebOutString("</div>");
    WebOutString("<div class='submit'><div class='hl_button' type='" & WLCr.Type & "'>" & ToolWebNGTranslateText2(70145) & "</div></div>");
    WebOutString("</div>");

    WebOutString("</form></div>");
  end;

  return;
end;

global
procedure ShowLoanApplicationOnWeb2(record WebNGElementVc WEr)
begin
  record WebLoanCalcVc WLCr;
  row WebLoanCalcVc WLCrw;
  Integer amount_min,amount_max,amount_step,term_min,term_max,term_step;
  Boolean verslof,faktf,garantf;
  Integer type,i,rwcnt;

  switch (WEr.HALFunc) begin
    case "Verslo": type = 0;
    case "Faktoringas": type = 1;
    case "Atsiskaitymo": type = 2;
  end;

  WLCr.Type = type;
  if (ReadFirstMain(WLCr,1,true)) then begin
  
    amount_min = WLCr.AmountMin;
    amount_max = WLCr.AmountMax;
    amount_step = WLCr.AmountStep;
    term_min = WLCr.TermMin;
    term_max = WLCr.TermMax;
    term_step = WLCr.TermStep;

    rwcnt = MatRowCnt(WLCr);
    WebOutString("<script>");
    WebOutString("var rates = {};");
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WLCr,i,WLCrw);
      WebOutString("rates['" & WLCrw.Months & "'] = " & WLCrw.Rate & ";");
    end;
    WebOutString("</script>");

    WebOutString("<div class='loan_app'><form method='POST'>");
    WebOutString("<div class='row'><div class='col'>")
    if (amount_min>0) then begin
      ShowSlideBar(amount_min,amount_max,amount_step,"amount",ToolWebNGTranslateText2(70007),ToolWebNGTranslateText2(70013),true);
    end;
    if (term_min>0) then begin
      ShowSlideBar(term_min,term_max,term_step,"term",ToolWebNGTranslateText2(70008),ToolWebNGTranslateText2(70014),true);
    end;
    WebOutString("</div><div class='col'>")
    //show selection box
    WebOutString("<div class='submit'><div class='hl_button' type='" & WLCr.Type & "'>" & ToolWebNGTranslateText2(70011) & "</div></div>");
    WebOutString("</div>");
    WebOutString("<div class='calc_summary'>");
    WebOutString("<div class='outer_circle'><div class='mid_circle'><div class='inner_circle'><div class='summ_content'></div><div class='summ_text'>" & ToolWebNGTranslateText2(70148) & "</div></div></div></div>");
    WebOutString("</div></div>");
    WebOutString("</form></div>");
  end;

  return;
end;


global
procedure ShowNewsLetterSignup(record WebNGElementVc WEr)
begin
  
  WebOutString("<div class='newsletter'>");
  WebOutString("<div class='newsletter-title'>" & ToolWebNGTranslateText2(70015) & "</div>");
  WebOutString("<div class='newsletter-descr'>" & ToolWebNGTranslateText2(70016) & "</div>");
  WebOutString("<div class='newsletter-form'><form><input type='hidden' name='id' value='" & WEr.HALFunc & "'><input type='email' name='email'><input type='button' class='button' value='" & ToolWebNGTranslateText2(70017) & "'></div>");
  WebOutString("</div>");

  return;
end;

updating procedure AddContactToMailingList(record PersColVc PersColr,record CUVc CUr)
begin
  record PersColListVc PersColListr;

  RecordNew(PersColListr);
  PersColListr.Code = CUr.Code;
  if (nonblank(CUr.Person)) then begin
    PersColListr.Name = CUr.Person;
  end else begin
    PersColListr.Name = CUr.Name;
  end;
  PersColListr.PersColCode = PersColr.Code;
  PersColListr.FileName = "CUVc";
  if (RecordInsert(PersColListr,true)) then begin 

  end;

  return;
end;

global webpublic
updating procedure WebSubmitNewsLetter()
begin
  record PersColVc PersColr;
  record CUVc CUr; 
  string 255 tstr,email;

  PersColr.Code = WebGetArg("id");
  if (ReadFirstMain(PersColr,1,true)) then begin
    email = WebGetArg("email");
    CUr.eMail = email;
    if (ReadFirstKey("eMail",Cur,1,true)) then begin
      AddContactToMailingList(PersColr,CUr);
    end else begin
      RecordNew(CUr);
      GetNextCustNr(tstr);//
      CUr.Code = tstr;
      CUr.eMail = email;
      if (RecordInsert(CUr,true)) then begin
        AddContactToMailingList(PersColr,CUr);
      end;
    end;
  end;

  WebOutString("<res msg='" & ToolWebNGTranslateText2(70018) & "'></res>");

  return;
end;

global webpublic
procedure WebShowEmpPic()
begin 
  record UserVc Userr;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  string 255 ext;
  Integer i;

  Userr.Code = WebGetArg("emp");
  if (ReadFirstMain(Userr,1,true)) then begin
    if (ReadRecordLink(Userr,1,Attachr,RLr)) begin
      ext = right(Attachr.FileName,4);
      SetContentTypeForExtension(ext);
      WebSetContentDisposition("inline; filename=" & Attachr.FileName);
      WebOutAttachment(Attachr.SerNr);
    end;
  end;
  return;
end;

procedure ShowSingleUserOnWeb(record UserVc Userr)
begin
   
  WebOutString("<div class='col-3 single_emp justify-content-center'>");
  WebOutString("<div class='emp_pic'><img src='/WebShowEmpPic.hal?emp=" & Userr.Code & "'></div>")
  WebOutString("<div class='emp_name'>" & Userr.Name & "</div>")
  WebOutString("<div class='emp_descr'>" & Userr.Job & "</div>")
  WebOutString("</div>");

  return;
end;

global
procedure ShowEmployeesOnWeb(record WebNGElementVc WEr)
begin
  record UserVc Userr;
  Boolean TrHs;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  record EGVc EGr;

  EGr.Code = WEr.HALFunc;
  if (ReadFirstMain(EGr,1,true)) then begin
    WebOutString("<div class='emplist_head'>" & EGr.Comment & "</div>");
    WebOutString("<div class='row'>");
    while (LoopKey("ActCode",Userr,1,true)) begin
      if (Userr.JobGroup==WEr.HALFunc) then begin
        if (ReadRecordLink(Userr,1,Attachr,RLr)) then begin
          ShowSingleUserOnWeb(Userr);
        end;
      end;
    end;
    WebOutString("</div>");
  end;

  return;
end;

procedure ShowContactLine(string cls,string text)
begin
  string 255 tstr;
  
  WebOutString("<div class='contactline " & cls & "'>" & text & "</div>");

  return;
end;

function string 255 GetWorkingHours(record CYBlock CYb)
begin
  

  GetWorkingHours = "";
  return;
end;

global
procedure ShowContactInfo(record WebNGElementVc WEr)
begin
  record CYBlock CYb;

  BlockLoad(CYb);

  switch (WEr.HALFunc) begin
    case "contactus":
      //show content 1
      ShowContactLine("location",CYb.CompName);
      ShowContactLine("blank",CYb.Addr0);
      ShowContactLine("empty","");
      ShowContactLine("blank",ToolWebNGTranslateText2(70024) & CYb.OrgNr);
      ShowContactLine("empty","");
      ShowContactLine("hours",ToolWebNGTranslateText2(70021));
      ShowContactLine("blank",GetWorkingHours(CYb));
      ShowContactLine("empty","");
      ShowContactLine("phone",ToolWebNGTranslateText2(70022) & CYb.Phone);
      ShowContactLine("email",ToolWebNGTranslateText2(70023) & CYb.emailAddr);

    case "footer":
      //show content 2
      ShowContactLine("blank",CYb.Addr0);
      ShowContactLine("phone",CYb.Phone);
      ShowContactLine("email",CYb.emailAddr);
  end;

  return;
end;
