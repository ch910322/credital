
global
function LongInt AgreementDocVcRecordCheck(var record AgreementDocVc ADr,record AgreementDocVc AD2r,LongInt stat,LongInt long4)
begin
  Longint res;

  res = 0;
  
  if (ADr.SerNr<=0) then begin
    ADr.SerNr = NextSerNr("AgreementDocVc",ADr.TransDate,-1,false,"");
  end;

  AgreementDocVcRecordCheck = res;
  return;
end;

global
function Boolean AllSuretyApplicationsSigned(Longint sernr,record AgreementDocVc tADr)
begin
  Boolean res;
  record AgreementDocVc ADr;
  row AgreementDocVc ADrw;
  Boolean TrHs;

  TrHs = true;
  res = true;
  ADr.RecordType = 1;
  ADr.RecordNr = sernr;
  ADr.Type = 7;
  while (LoopKey("RecordNr",ADr,3,TrHs)) begin
    if (ADr.RecordNr!=sernr or ADr.RecordType!=1 or ADr.Type!=7) then begin
      TrHs = false;
    end else begin
      if (tADr.SerNr==ADr.SerNr) then begin//we are in recordupdate raction for this document which is not stored in db yet :)
        MatRowGet(tADr,0,ADrw);
        if (ADrw.Status!=1) then begin
          res = false;
          TrHs = false;
        end;
      end else begin
        MatRowGet(ADr,0,ADrw);
        if (ADrw.Status!=1) then begin
          res = false;
          TrHs = false;
        end;
      end;
    end;
  end;

  AllSuretyApplicationsSigned = res;
  return;
end;

function Boolean MatrixIsSigned(record AgreementDocVc ADr)
begin
  row AgreementDocVc ADrw;
  Integer i,rwcnt;
  Boolean res;

  res = true;
  rwcnt = MatRowCnt(ADr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ADr,i,ADrw);
    if (ADrw.Status!=1) then begin
      res = false;
      i = rwcnt;
    end;
  end;

  MatrixIsSigned = res;
  return;
end;

function Boolean AllDocumentsSignedByCustomerCM(Longint sernr,record AgreementDocVc tADr)
begin
  Boolean res;
  record AgreementDocVc ADr;
  row AgreementDocVc ADrw;
  Boolean TrHs;

  TrHs = true;
  res = true;
  ADr.RecordType = 0;
  ADr.RecordNr = sernr;
  while (LoopKey("RecordNr",ADr,2,TrHs)) begin
    if (ADr.RecordNr!=sernr or ADr.RecordType!=0) then begin
      TrHs = false;
    end else begin
      if (tADr.SerNr==ADr.SerNr) then begin//we are in recordupdate raction for this document which is not stored in db yet :)
        if (MatrixIsSigned(tADr)==false) then begin
          res = false;
          TrHs = false;
        end;
      end else begin
        if (MatrixIsSigned(ADr)==false) then begin
          res = false;
          TrHs = false;
        end;
      end;
    end;
  end;

  AllDocumentsSignedByCustomerCM = res;
  return;
end;

function Boolean AllDocumentsSignedByUsCM(Longint sernr,record AgreementDocVc tADr)
begin
  Boolean res;
  record AgreementDocVc ADr;
  row AgreementDocVc ADrw;
  Boolean TrHs;

  TrHs = true;
  res = true;
  ADr.RecordType = 0;
  ADr.RecordNr = sernr;
  while (LoopKey("RecordNr",ADr,2,TrHs)) begin
    if (ADr.RecordNr!=sernr or ADr.RecordType!=0) then begin
      TrHs = false;
    end else begin
      if (tADr.SerNr==ADr.SerNr) then begin//we are in recordupdate raction for this document which is not stored in db yet :)
        if (tADr.SignedByUs!=1) then begin
          res = false;
          TrHs = false;
        end;
      end else begin
        if (ADr.SignedByUs!=1) then begin
          res = false;
          TrHs = false;
        end;
      end;
    end;
  end;

  AllDocumentsSignedByUsCM = res;
  return;
end;

global
updating function LongInt AgreementDocVcRecordUpdate(var record AgreementDocVc ADr,record AgreementDocVc AD2r,LongInt stat,LongInt long4)
begin
  Longint res;
  row AgreementDocVc ADrw;
  record B2BLoanApplicationVc LAr,oldLAr;
  record CMApplicationSetBlock CMb;
  record CMOrderClassBlock OCb;
  
  record CUVc CUr,oldCUr;
  record CredManVc CMr,oldCMr;

  res = 0;
  
logtext(0,"AgreementDocVcRecordUpdate updating " & ADr.SerNr);
  if (ADr.Type==7) then begin
logtext(0,"AgreementDocVcRecordUpdate2");
    MatRowGet(ADr,0,ADrw);
    if (ADrw.Status==1) then begin
logtext(0,"AgreementDocVcRecordUpdate3");
      if (AllSuretyApplicationsSigned(ADr.RecordNr,ADr)) then begin
logtext(0,"AgreementDocVcRecordUpdate4");
        LAr.SerNr = ADr.RecordNr;
        if (ReadFirstMain(LAr,1,true)) then begin
          BlockLoad(OCb);
logtext(0,"AgreementDocVcRecordUpdate5");
          if (LAr.OrderClass!=OCb.CheckWebAppClass) then begin
logtext(0,"AgreementDocVcRecordUpdate6");
            RecordCopy(oldLAr,LAr);
            LAr.OrderClass = OCb.VerWebAppClass;
            RecordUpdate(oldLAr,LAr,true);
          end;
        end;
      end;
      CUr.Code = ADrw.CustCode;
      if (ReadFirstMain(CUr,1,true)) then begin
        BlockLoad(CMb);
        if (CMb.PrivateDataYears>0) then begin
          RecordCopy(oldCUr,CUr);
          CUr.AccessToDataUntil = AddYear(CurrentDate,CMb.PrivateDataYears);
          RecordUpdate(oldCUr,CUr,true);
        end;
      end;
    end;
  end;  
  if (ADr.Type==1 or ADr.Type==2 or ADr.Type==3) then begin
    if (ADr.SignedByUs==1 and MatrixIsSigned(ADr)) then begin
      CMr.SerNr = ADr.RecordNr;
      if (ReadFirstMain(CMr,1,true)) then begin
        RecordCopy(oldCMr,CMr);
        switch (ADr.Type) begin
          case 1: CMr.SignAgreement = 1;
          case 2: CMr.SignSchedule = 1;
          case 3: CMr.SignSurety = 1;
        end;
        RecordUpdate(oldCMr,CMr,true);
      end;
    end;
  end;
  if (ADr.RecordType==0) then begin
logtext(0,"AgreementDocVcRecordUpdate7");
    BlockLoad(OCb);
    if (AllDocumentsSignedByCustomerCM(ADr.RecordNr,ADr)) then begin
logtext(0,"AgreementDocVcRecordUpdate8");
      CMr.SerNr = ADr.RecordNr;
      if (ReadFirstMain(CMr,1,true)) then begin
        RecordCopy(oldCMr,CMr);
        CMr.OrderClass = OCb.CMCustSignedOrderClass;
        RecordUpdate(oldCMr,CMr,true);
      end;    
    end;
    if (AllDocumentsSignedByUsCM(ADr.RecordNr,ADr)) then begin
logtext(0,"AgreementDocVcRecordUpdate8");
      CMr.SerNr = ADr.RecordNr;
      if (ReadFirstMain(CMr,1,true)) then begin
        RecordCopy(oldCMr,CMr);
        CMr.OrderClass = OCb.CMUsSignedOrderClass;
        RecordUpdate(oldCMr,CMr,true);
      end;    
    end;
  end;

  AgreementDocVcRecordUpdate = res;
  return;
end;

global
function LongInt AgreementDocVcRecordDefaults(var record AgreementDocVc ADr,record AgreementDocVc LA2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record CredManSetBlock CredManSb;
  
  res = 1;  

  if (SingleUserMode) then begin
    ADr.SerNr = NextSerNr("AgreementDocVc",ADr.TransDate,-1,false,"");
  end;
  ADr.TransDate = CurrentDate;
  ADr.TransTime = CurrentTime;
  
  AgreementDocVcRecordDefaults = res; 
  return;
end;

global
function LongInt AgreementDocVcRecordDuplicate(var record AgreementDocVc ADr,record AgreementDocVc LA2r,LongInt long3,LongInt long4)
begin
  LongInt res; 
  res = 1;  

  ADr.TransDate = CurrentDate;
  ADr.TransTime = CurrentTime;
  ADr.SerNr = -1;
  ADr.SignedByUs = 0;
  ADr.SignedByUsDate = "";
  ADr.SignedByUsTime = "";
  ADr.SignedByCustomer = 0;
  ADr.SignedByCustomerDate = "";
  ADr.SignedByCustomerTime = "";
  
  AgreementDocVcRecordDuplicate = res; 
  return;
end;

global
updating procedure ClearAgreementDocRecords(Longint recordnr,Integer rectype)
begin
  record AgreementDocVc ADr;
  Boolean TrHs;

  TrHs = true;
  ADr.RecordType = rectype;
  ADr.RecordNr = recordnr;
  while (LoopKey("RecordNr",ADr,2,TrHs)) begin
    if (ADr.RecordType!=rectype or ADr.RecordNr!=recordnr) then begin
      TrHs = false;
    end else begin
      RecordRemove(ADr);
      StepBack(ADr);
    end;
  end;

  return;
end;

global
updating function LongInt AgreementDocVcRecordUpdateClient(LongInt wn,var record AgreementDocVc ADr,record AgreementDocVc AD2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Integer nwn;
  record CredManVc CredManr;
  
  nwn = FindWindow("CredManDClass");
  if (nwn>0) then begin
    if (WindowState(nwn)==Rs_Normal) then begin
      GetWindowRecord(nwn,CredManr);
      if (ReadFirstMain(CredManr,1,true)) then begin
        PutWindowRecord(nwn,CredManr);
      end;
    end;
  end;

  AgreementDocVcRecordUpdateClient = res;
  return;
end;