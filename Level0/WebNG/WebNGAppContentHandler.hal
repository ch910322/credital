//tools
external function string 255 removenextnode(var string);
external function string 255 FormatSimpleLink(string,boolean);
external procedure ToolWebOutContentTextFormat(record WebNGContentVc,Boolean);
external function string 10 ToolWebNGGetCountry();
//webng
external procedure RedirectToURL(string);
//pages
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
//elements
external procedure ShowContentList(string,string,string,Boolean,Boolean);
//std
external function string 255 GetNextValue(var string);
external function boolean IsNumeric(string);

global
procedure ContentHandlerApp(record WebNGStructVc WSr,string path)
begin
  record WebNGContentVc WCr;
  record WebNGPageVc WPr;
  row WebNGPageVc WPrw;
  string 255 node,mpath,country,settings,fn;
  transaction boolean gOutputTagComments;
  record Attach2Vc Attachr;
  record RLinkVc RLr;
  Integer i;
//CUST-BEGIN
  Boolean foundf;
//CUST-END

  settings = WSr.HALFunc;
  WSr.HALFunc = GetNextValue(settings);
  
  WPr.Code = WSr.WebPage;
  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;
  
  //ShowWebAppPageStart(WPr,"");

  mpath = path;
  node = removenextnode(mpath);

  //can handle
  // /news/sweden/1 (content record 1)
  // /news/1 (content record 1)
  // /news/sweden (all sweden)
  // /news (show all)
/* CUST-REMOVED
  if (IsNumeric(node)==false) then begin
    country = node;
    node = removenextnode(mpath);
  end;
*/  
  if (blank(node)) then begin
    ShowWebAppPageStart(WPr,"");
    if (blank(country)) then begin
      node = GetNextValue(settings);
      if (node=="redirecttocountry") then begin
        country = ToolWebNGGetCountry;
        if (nonblank(country)) then begin
          if (nonblank(WebGetArg("path"))) then begin
            if (right(WebGetArg("path"),1)!="/") then begin
              country = "/" & country;
            end;
            country = WebGetArg("path") & country;
            RedirectToURL(FormatSimpleLink(country,true));
            goto LContentHandlerApp;
          end;
        end;
      end;
    end;
//CUST-BEGIN
    country = ToolWebNGGetCountry;
//CUST-END
    if (country=="_all") then begin
      country = "";
    end;
    ShowContentList(WSr.HALFunc,country,"",true,false);
  end else begin
    if (IsNumeric(node)) then begin
      WCr.SerNr = node;
      if (ReadFirstMain(WCr,1,true)) then begin
        foundf = true;
      end;
    end else begin
      WCr.NodeName = node;
      if (ReadFirstKey("NodeName",WCr,1,true)) then begin
        foundf = true;
      end;
    end;
    if (foundf) then begin
      node = removenextnode(mpath);
      fn = WebGetArg("image");
      if (nonblank(node) and node=="images" and nonblank(fn)) then begin
        i = 1;
        while (ReadRecordLink(WCr,i,Attachr,RLr)) begin
          if (Attachr.FileName==fn) then begin
            WebSetContentDisposition("inline;filename=" & Attachr.FileName);
            WebOutAttachment(Attachr.SerNr);
            goto LContentHandlerAppSkip;
          end;
          i = i + 1;
        end;
        goto LContentHandlerAppSkip;
      end else begin
        if(nonblank(WCr.ElementCode)) then begin
          WPrw.WebElement = WCr.ElementCode;
          WPrw.Position = 3; //HTML Head
          MatRowInsert(WPr,0,WPrw);
        end;

        ShowWebAppPageStart(WPr,"");

        if (gOutputTagComments) then begin
          WebOutTagOpen("<!--[if !IE]> CONTENT-BEGIN: " & WCr.SerNr & " <![endif]-->");
        end;

        ToolWebOutContentTextFormat(WCr,false);

        if (gOutputTagComments) then begin
          WebOutTagClose("<!--[if !IE]> CONTENT-END: " & WCr.SerNr & " <![endif]-->");
        end;
      end;
    end else begin
      ShowWebAppPageStart(WPr,"");
    end;
  end;
  
LContentHandlerApp:;
  ShowWebAppPageEnd(WPr);
LContentHandlerAppSkip:;
  return;
end;
